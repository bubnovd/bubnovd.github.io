<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>routing on Админская фамилия</title><link>https://bubnovd.net/tags/routing/</link><description>Recent content in routing on Админская фамилия</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Nov 2016 08:34:00 +0000</lastBuildDate><atom:link href="https://bubnovd.net/tags/routing/index.xml" rel="self" type="application/rss+xml"/><item><title>Что почитать после второго дня MTCNA</title><link>https://bubnovd.net/blogger/%D1%87%D1%82%D0%BE-%D0%BF%D0%BE%D1%87%D0%B8%D1%82%D0%B0%D1%82%D1%8C-%D0%BF%D0%BE%D1%81%D0%BB%D0%B5-%D0%B2%D1%82%D0%BE%D1%80%D0%BE%D0%B3%D0%BE-%D0%B4%D0%BD%D1%8F-mtcna/</link><pubDate>Tue, 22 Nov 2016 08:34:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D1%87%D1%82%D0%BE-%D0%BF%D0%BE%D1%87%D0%B8%D1%82%D0%B0%D1%82%D1%8C-%D0%BF%D0%BE%D1%81%D0%BB%D0%B5-%D0%B2%D1%82%D0%BE%D1%80%D0%BE%D0%B3%D0%BE-%D0%B4%D0%BD%D1%8F-mtcna/</guid><description>Общая информацияIP адресMAC адресARP и ARP SpoofingDHCP. Он не так прост как кажется. Если есть желание, то можно забить себе голову всякими REQUEST/REPLY - миBridgeПочему нельзя сделать прозрачный мост на Wireless Station и что означают разные режимы WLANBridgeSwitchRoutingРоутинг в картинках. Читать первую треть статьи. До слов &amp;ldquo;Итак, с маршрутами разобрались&amp;quot;RoutingНеплохо бы ещё взглянуть на Traffic Flow Diagram</description><content>&lt;p>Общая информация&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->IP адрес&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->MAC адрес&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->ARP&lt;!-- raw HTML omitted --> и &lt;!-- raw HTML omitted -->ARP Spoofing&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->DHCP&lt;!-- raw HTML omitted -->. Он не так прост как кажется. Если есть желание, то можно забить себе голову всякими REQUEST/REPLY - ми&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Bridge&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Почему нельзя сделать прозрачный мост на Wireless Station и что означают разные режимы WLAN&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Bridge&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Switch&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Routing&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Роутинг в картинках&lt;!-- raw HTML omitted -->. Читать первую треть статьи. До слов &amp;ldquo;&lt;!-- raw HTML omitted -->Итак, с маршрутами разобрались&lt;!-- raw HTML omitted -->&amp;quot;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Routing&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Неплохо бы ещё взглянуть на &lt;!-- raw HTML omitted -->Traffic &lt;!-- raw HTML omitted -->Flow &lt;!-- raw HTML omitted -->Diagram&lt;!-- raw HTML omitted -->&lt;/p></content></item><item><title>Маршрутизация. OSPF в Mikrotik RouterOS</title><link>https://bubnovd.net/blogger/%D0%BC%D0%B0%D1%80%D1%88%D1%80%D1%83%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F.-ospf-%D0%B2-mikrotik-routeros/</link><pubDate>Wed, 16 Mar 2016 04:29:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D0%BC%D0%B0%D1%80%D1%88%D1%80%D1%83%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F.-ospf-%D0%B2-mikrotik-routeros/</guid><description>По Вики: OSPF(англ. Open Shortest Path First) — протокол динамической маршрутизации, основанный на технологии отслеживания состояния канала (link-state technology) и использующий для нахождения кратчайшего пути алгоритм Дейкстры.
Для чего нужен OSPF и как применять его на сетях, построенных на Mikrotik RouterOS, мы и рассмотрим в этой статье.
Все, кто работал с сетями, имеющими более одной подсети (провайдеры, компании с филиалами, несколько vlan и т.д.) знают о необходимости существования маршрутов из одной сети в другую.</description><content>&lt;p>По Вики: OSPF(&lt;a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA">англ.&lt;/a> Open Shortest Path First) — протокол динамической &lt;a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%80%D1%88%D1%80%D1%83%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F">маршрутизации&lt;/a>, основанный на технологии отслеживания состояния канала (link-state technology) и использующий для нахождения кратчайшего пути &lt;a href="https://ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%94%D0%B5%D0%B9%D0%BA%D1%81%D1%82%D1%80%D1%8B">алгоритм Дейкстры&lt;/a>.&lt;/p>
&lt;p>Для чего нужен OSPF и как применять его на сетях, построенных на Mikrotik RouterOS, мы и рассмотрим в этой статье.&lt;/p>
&lt;p>Все, кто работал с сетями, имеющими более одной подсети (провайдеры, компании с филиалами, несколько vlan и т.д.) знают о необходимости существования маршрутов из одной сети в другую. Иначе пакеты в соединении будут просто улетать на шлюз по умолчанию и дропаться где-то в интернете.&lt;/p>
&lt;p>Для тех же, кто с этим не знаком, поясню. Представьте, что мы внезапно захотели попасть из Челябинска в Киев, не имя при этом ни карты, ни навигатора. Поедем по указателям - не зря же их ставили.&lt;/p>
&lt;p>&lt;img src="https://lh4.googleusercontent.com/F5Eh9eEahfyDkdhnwrhivSGam5jyPG5uYI0_9HVUff1ZztiYhvmSXKreMtl0jASab8rcarbXt7rohlQ6XlOELIObuzE2sgf3XJcz1dVjkEsdNhqFxQQlN03OgPrsQQ-q08A9EIDz" alt="def3152d41f310537ded5b5e85f98024.jpg">&lt;/p>
&lt;p>Таким образом посмотрев на 10-20-100 укзателей мы рано или поздно доберемся до Киева - пакет от отправителя ушел к адресату. Сделали там все свои дела и захотели обратно домой в Челябинск - приложение обработало пакет и отправило ответ инициатору соединения. Но дорогу то мы не помним (в пакете нет никаких данных о прохождении пути. На самом деле есть намеки на это, но с помощью них нельзя восстановить путь пакета). Не беда - поедем по указателям.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/tQFmGwLFRAopzx8624XROXrN7bhII7Hv5peK1S6MJg-zYyzVX8uCImXKNEeiMbEZq8PzP64BXjW318hior-rk-7AMCCyvhyvHfExVjzF8CaiBfyRcMn9XLRP3QLwY5YB1TEtJ02y" alt="d-3.jpg">&lt;/p>
&lt;p>Так же как и в первый раз мы каким-то образом вернемся в точку, из которой выехали. Причем, очень важно то, что вернуться мы можем по другим дорогам - на каких то начали укладывать асфальт за время нашего пребывания в Киеве и поставили знаки объезда, где-то просто затор и мы решили объехать по менее нагруженным трассам. Но мы все равно доберемся до места, пусть и затратив большее время.&lt;/p>
&lt;p>Итак, мы, инкапсулированные в автомобиль - это данные, инкапсулированные в IP-пакет. Перекрестки на дороге - маршрутизаторы, подключенные к разным сетям (дорогам). А указатели на перекрестках - таблицы маршрутизации отдельных маршрутизаторов, знающие куда повернуть, чтобы попасть в ту или иную точку. И если в одну сторону мы доедем по указателям, а в другую указателей не будет, то пиши пропало - до исходной точки не доберемся. Значит, маршруты до общающихся сетей должны быть прописаны на обеих сторонах. И очень важно понимать, что дорог-маршрутов может быть несколько. И если один перекресток-маршрутизатор в ремонте, то предыдущий может послать нас в объезд, но сначала он должен узнать, что его сосед сломался. И если мы ездим по разным дорогам, значит и время пинга у нас будет разное.&lt;/p>
&lt;p>Итак, с маршрутами разобрались. Теперь поговорим о дорожниках, ставящих указатели.&lt;/p>
&lt;p>Статические указатели на дорогах - хорошо. Но расстояние между Челябинском и Киевом 2400 км. А значит и указателей должно быть не меньше 24 - по одному на каждые 100 км. И если на одном из перекрестков идет ремонт, необходимо внести изменения на два смежных указателя. А вероятность одновременного ремонта на 24 перекрестах весьма высока. То есть нужна отдельная бригада дорожников, меняющих указатели.&lt;/p>
&lt;p>Было бы неплохо соединить все указатели в  сеть и позволить им самим оценивать ситуацию на своих участках и передевать эти данные между собой. К сожалению великие и ужасные службы обслуживания дорог об этом ещё не додумались, да и вряд ли это надо - деньги то пилить не получится. А вот айтишники придумали технологии, позволяющие динамически изменять таблицы маршрутизации и обмениваться этой информацией. Эти технологии называются Протоколы Динамической Маршрутизации. И один из них - OSPF, предназначенный для обмена информацией внутри одной автономной системы - AS.&lt;/p>
&lt;p>Термины и работа OSPF хорошо описаны в &lt;a href="http://wiki.mikrotik.com/wiki/Russian/OSPF">вики&lt;/a> микротика. Но я осмелюсь кое-что повторить и перефразировать.&lt;/p>
&lt;p>Допустим, есть следующая сеть. &lt;img src="https://lh6.googleusercontent.com/Q0CaTrRk9W1S6bXYtFGMLX-1KENf7wtZh1BBytzRgZ7TAPOMOeoVL1l5JflulsS-wd4Tn0TSyWJTnMU5CbMn6vNTm7WcjaT3UNcQ5qR81q1WWux93yFebG2_NEzY_xzP9pss9jSv" alt="">&lt;/p>
&lt;p>Как видим, к сети 172.16.1.0 можно попасть двумя путями: через R2  и через связку R3+R4. Cost’ы, написанные возле каждого линка задают стоимость линка, своеобразный аналог параметра distance в ip-route. Чем ниже значение cost’а, тем выше вероятность того, что трафик пойдет по этому пути. Но как видно на следующем рисунке суммарная стоимость обоих маршрутов к сети 172.16.1.0 составляет 20. Так по какому же пути пойдет трафик?&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/bmVkOn8ug3_iwz5CxX4V4pG6rBUV1PWEuUribhRBcgrH74XIYw5EHkzpYJqACPQMg-KBcT64yNIWlEyZU5SYquXmkMeA-nHSeA0w_tyf979IeeesldHJMF9lzXa1-QlPp2X5zwSU" alt="500px-Sp-tree.png">&lt;/p>
&lt;p>В таком случае в таблице маршрутизации увидим примерно такую картину - к одной сети имеем два шлюза. И трафик должен пойти через оба шлюза. В этом случае мы можем управлять тем, куда пойдет трафик. Называется эта технология Policy Based Routing, но тема управления трафиком выходит за рамки этой статьи.&lt;img src="https://lh3.googleusercontent.com/cPf0vHU_4mm0j9dMGH-8CTmKI2qRy-GNCPey8D9iRfSxONlpmF22xGA7TAXM7mZKow9vvgxKjRqZAisabPYkuvxpVk1mOZBkj7u9_ClxXR3mbWAvz9KvToxnZvgAjNo3urv-u3u5" alt="">&lt;/p>
&lt;p>Сделать, чтобы OSPF “заработал” в Mikrotik RouterOS очень просто - нужно лишь добавить в backbone на каждом роутере в Routing - OSPF - Networks все ваши сети, между которыми вы хотите динамическую маршрутизацию и “оно заработает”.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/W5tJB4H6ueSTcer4mrd4rJHO8PN88T9yB7QAmCn964Ox3AA1TAvfdoJWC_2D95G9EyJiIB3xgU4yLIfaVxVJzB_BYiqS_wqiBj3RWsbJUvIjxCVuAQm8yioPpvVkcZd-xl83plBW" alt="">&lt;/p>
&lt;p>Но мы ведь хотим управлять процессом. Тот, кто не хочет управлять дальше может не читать. Остальным - добро пожаловать!&lt;/p>
&lt;p>Рассматривать будем сеть, типичную для организации с несколькими филиалами. Имеем центральный офис (Headquarter на схеме, для краткости будем звать его ЦО) с сетью 192.168.0.0/24 (что я, кстати, не рекомендую при дефолтных настройках OSPF. Почему - скажу ниже). В ЦО расположены все основные элементы инфраструктуры - контроллер домена, сервер удаленного доступа, почтовый сервер и т.д. Все филиалы должны иметь доступ ко всем этим сервисам.&lt;/p>
&lt;p>Несколько филиалов (Branche на схеме, для краткости - СП - Структурное Подразделение) с адресами 192.168.X.0/24. Между ЦО и каждым СП шифрованный туннель SSTP (или любой другой VPN)  - адреса в туннелях из подсети 192.168.255.0/24 (192.168.255.10 - ЦО, 192.168.255.1 - СП1, 192.168.255.2 - СП2, &amp;hellip;). Между филиалами связь не нужна, т.к. все службы в ЦО. Когда филиалов 3, нам легко добавить 3 маршрута на роутер в ЦО и по одному на каждый из роутеров СП. Итого 6 движений мышкой. А что если СП у нас не 3, а 33 и необходимы маршруты от каждого каждому, а ещё есть подрядчики с доступом к нескольким СП? Тут и приходит на помощь OSPF.&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/A4EHiSGPUqDZ1beS7QFD_l8GnvOMSDr28Oab4DtlwqjYgAnJnul5ex94nxPd8Oo5VTfozCLRWL5rDpuoBqu-cGa96rbHFJ5rVWErypF0U47M0nosNtbR13u7fKObO6hDsM_zH9_Q" alt="">&lt;/p>
&lt;p>Кому надо “быстро и пофиг как оно работает”, могут пойти по схеме, предложенной выше - добавить в backbone все свои сети.&lt;/p>
&lt;p>Почему именно backbone? Backbone в переводе с английского - хребет, позвоночник. OSPF оперирует понятиями Area (область), Autonomous System (AS, автономная система). AS - все сети, которые принадлежат вам и между которыми может работать ваш протокол динамической маршрутизации. Area - часть этой сети. На картинке ниже показана одна AS с тремя Area, одна из которых - backbone (Area 0 с ID 0.0.0.0). Каждая Area имеет свой ID, похожий на IP адрес. Backbone всегда имеет ID 0.0.0.0. Все области в OSPF должны иметь линк с backbone. Иначе ничего работать не будет.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/noQfSLYZJlp7I4vlDy913kNgc-vs9hD_313y347vX9boBeYaguiXos_05VsWs5ZHV7dy_yobuAfGRXz5j0rmZRn6PtC7QXAQjeEYvCFegbTPsQsV53QdX7iZiVh6s16wfzy_kSAR" alt="slide1.jpg">&lt;/p>
&lt;p>В нашем примере мы решили долго не думать и загнать все в backbone. По большому счету это ничем не грозит и работать будет. Но если провайдер отдает одному из ваших филиалов частный адрес из 192.168.0.0/16 (192.168.18.27/29, например), то в вашей таблице маршрутизации появится сеть провайдера. И если кто-то с другой стороны провайдера использует такие же настройки (или просто указал маршрут к вашим сетям), то он сможет беспрепятственно попасть в вашу сеть. А уж случайно это сделали или намеренно - узнаете когда данные из вашей БД всплывут в интернете.&lt;/p>
&lt;p>В этом случае можно использовать авторизацию на каждом интерфейсе Routing - OSPF - Interfaces.&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/0ZY3n6YzZay2C5Nq2zlFrSy2N5P2Ba1qVBITR-vhPNGXNFO9jGb8A_Fn-Gopw3kGGOJSjBJtOIeRQncruQsdVP5dS1DM7hAiI0C5Th_gVMj_vCbJwISiCYp9jk1rYpJOF7CR3_oT" alt="">&lt;/p>
&lt;p>Или указать, что интерфейс, смотрящий к провайдеру будет в пассивном режиме.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/bqn9Fg0NfnLC6J6NQJhxY2_2xeCexwJS6nI_sZQ6b9g52FPIPQLb_eUVTjPpjDdCR-u9dc_EAzvcXWycFryBGx0Z0TxeIdur9yqXKwHJ2fezwSXPC05T6x8rhqFcQ5zwrRjLzjuL" alt="">&lt;/p>
&lt;p>Теперь поговорим о том, как сделать “правильно” - не вещать свои сети куда попало и позволить грамотно траблшутить работу OSPF.&lt;/p>
&lt;p>Как мы говорили выше, каждая область имеет свой ID. Также и каждый участник OSPF имеет свой ID. По умолчаню он выставляется автоматически и выбирается из IP адресов, присвоенных интерфейсам роутера. Но нам надо проставить его в ручную, чтобы была какая-то логика в именовании и мы всегда знали откуда пришел запрос. Ставится это в Routing - OSPF - Instances - Router ID.&lt;/p>
&lt;p>**&lt;br>
&lt;img src="https://lh3.googleusercontent.com/3ug33SNyG9U33zD4xO45a-ls1VyNV2fWqUIYD9-5S-ct9hyhQY1sxfbyEpj6jMi6j3EZHluf2DFQZZ1KdKidP11l8yU0IpYDRAFenDdhm3YqsB6GvxQ9xCClTdOCCHwk0skL5jkE" alt="">**&lt;/p>
&lt;p>В нашей схеме имеется несколько областей. Как мы выяснили, основная область, соединяющая все остальные - backbone. Именно в этой области летают пакеты от одного роутера к другому, позволяющие обмениваться маршрутной информацией. Значит, этой областью должны быть туннели, соединяющие СП и ЦО, что видно на рисунке ниже.&lt;/p>
&lt;p>**&lt;br>
&lt;img src="https://lh6.googleusercontent.com/j13-MMPzbhY3dwDuC5rI7bqBm3Ez29U7L1FQvt_6EOe_ilDLeHRQZjCSdv_4V3gvuu1HI2Gp1nPJQXvwo1BdNfAyGY54UuPKVrrddn02edY4ujtxo6JP_62BFilwX_OxIek0aMvF" alt="">&lt;/p>
&lt;p>**Таким образом, нам необходимо выделить на каждом маршрутизаторе по две зоны - backbone и свою локальную сеть. На примере ЦО:&lt;/p>
&lt;p>routing ospf area add name=Area0 area-id=192.168.0.0&lt;/p>
&lt;p>routing ospf network add area=Area0 network=192.168.0.0/24&lt;/p>
&lt;p>routing ospf network add area=backbone network=192.168.255.0/24&lt;/p>
&lt;p>И точно так же на остальных маршрутизаторах, только заменив Area-ID, Area name и network на свои.&lt;/p>
&lt;p>Теперь на каждом маршрутизаторе можем увидеть маршруты ко всем остальным сетям с буквами D и o в описании, что означает, что эти маршруты D - динамические (прилетели в резудльтате работы протоколов динамической маршрутизации) и o - из протокола  OSPF.&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/Xm1gPou5DGykhpHT6MdJ0us-DNZZ6t6IcJFQ9kHarSsHnTdxZwMZ2d08NH-88YVkkEPuHa9Phewkbnc_NtnRJkLme77h2QSFWpJ71ESJ0IGyDNQM1isavubZvUDR9Dy_6c_rNyR8" alt="SP2_2.PNG">&lt;/p>
&lt;p>Таким образом мы произвели простую и надежную настройку протокола динамической маршрутизации. У OSPF ещё имеется куча дополнительных настроек, таких как приоритет роутера, стоимость интерфейса, время определения состояний и многое, многое другое. Это позволяет очень гибко настроить маршрутизацию под свои нужды, но тема эта очень обширная и выходит за рамки этого и так очень растянувшегося поста. Если читатели проявят желание, то в будущем можно будет подробно расписать (почти) все нюансы применения OSPF.&lt;/p>
&lt;p>Картинки с wiki.mikrotik.com, blog.globalknowledge.com и других ресурсов, а также свои скриншоты и схемы, нарисованные с помощью сервиса &lt;a href="https://www.draw.io/">draw.io&lt;/a>&lt;/p>
&lt;p>Статья написана мной для &lt;a href="http://lanmarket.ua/stats/protokol-dinamicheskoy-marshrutizacii-OSPF">lanmarket.ua&lt;/a>&lt;/p></content></item><item><title>Routing Security in Mikrotik RoutrerOS</title><link>https://bubnovd.net/blogger/routing-security-in-mikrotik-routreros/</link><pubDate>Mon, 14 Mar 2016 23:42:00 +0000</pubDate><guid>https://bubnovd.net/blogger/routing-security-in-mikrotik-routreros/</guid><description/><content>&lt;!-- raw HTML omitted --></content></item><item><title>Динамическая маршрутизация в Mikrotik RouterOS</title><link>https://bubnovd.net/blogger/%D0%B4%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D0%BC%D0%B0%D1%80%D1%88%D1%80%D1%83%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2-mikrotik-routeros/</link><pubDate>Sun, 17 Jan 2016 02:05:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D0%B4%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D0%BC%D0%B0%D1%80%D1%88%D1%80%D1%83%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2-mikrotik-routeros/</guid><description/><content>&lt;!-- raw HTML omitted --></content></item></channel></rss>