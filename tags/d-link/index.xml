<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>D-Link on Админская фамилия</title><link>https://bubnovd.net/tags/d-link/</link><description>Recent content in D-Link on Админская фамилия</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 Oct 2017 09:16:00 +0000</lastBuildDate><atom:link href="https://bubnovd.net/tags/d-link/index.xml" rel="self" type="application/rss+xml"/><item><title>Система управления конфигурациями Oxidized</title><link>https://bubnovd.net/blogger/%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BA%D0%BE%D0%BD%D1%84%D0%B8%D0%B3%D1%83%D1%80%D0%B0%D1%86%D0%B8%D1%8F%D0%BC%D0%B8-oxidized/</link><pubDate>Thu, 12 Oct 2017 09:16:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BA%D0%BE%D0%BD%D1%84%D0%B8%D0%B3%D1%83%D1%80%D0%B0%D1%86%D0%B8%D1%8F%D0%BC%D0%B8-oxidized/</guid><description>Резервное копирование - важная составляющая стабильной работы инфраструктуры. Каждый подходит к вопросу резервного копирования со своими взглядами. Сетевое оборудование также нуждается в постоянном бэкапе конфигураций. Но в силу того, что сети редко бывают моновендорными и найти один метод управления для всей сети часто невозможно, резервное копирование сетевых устройств часто вводит в замешательство администраторов.
Для автоматизации резервного копирования конфигураций сетевого оборудования инженеры часто применяют системы контроля версий. Такой подход позволяет не только всегда иметь актуальную копию конфигурации, но и оперативно находить изменения в настройках, которые могли привести к неправильной работе сети.</description><content>&lt;p>Резервное копирование  - важная составляющая стабильной работы инфраструктуры. Каждый подходит к вопросу резервного копирования со своими взглядами. Сетевое оборудование также нуждается в постоянном бэкапе конфигураций. Но в силу того, что сети редко бывают моновендорными и найти один метод управления для всей сети часто невозможно,  резервное копирование сетевых устройств часто вводит в замешательство администраторов.&lt;/p>
&lt;p>Для автоматизации резервного копирования конфигураций сетевого оборудования инженеры часто применяют системы контроля версий. Такой подход позволяет не только всегда иметь актуальную копию конфигурации, но и оперативно находить изменения в настройках, которые могли привести к неправильной работе сети.&lt;/p>
&lt;p>Во время подготовки к выступлению на &lt;a href="https://mum.mikrotik.com/presentations/RU17M/presentation_4655_1508211463.pdf">MUM&lt;/a> &lt;a href="https://www.youtube.com/watch?v=9Ceti-EQpU4">2017&lt;/a> я изучил несколько систем, позволяющих автоматизировать резервное копирование в git.  &lt;/p>
&lt;h2 id="unimus">Unimus&lt;/h2>
&lt;p>Разработана Tomas Kirnak - моим коллегой - тренером Mikrotik из США. Система писалась исходя из потребностей Томаса для его сети из 1500 RouterOS и других устройств. На тему управления этим парком Томас &lt;a href="https://mum.mikrotik.com/presentations/US17/presentation_4529_1496842532.pdf">докладывал на МУМе.&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://unimus.net/">Unimus&lt;/a> инсталлируется на Windows, *nix, имеется  portable версия для Windows. Устанавливать я не пробовал, но portable версию запустил. Все заработало без особых телодвижений, открылся приятный веб интерфейс. Поддерживается работа с 58 вендорами, бэкапит в git&lt;/p>
&lt;p>&lt;img src="https://unimus.net/images/features/2.gif" alt="Картинки по запросу unimus backup">&lt;/p>
&lt;p>Система простая, удобная и, главное, работающая. За что автор и просит денег.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/vz8EnqRnYlbPMLv2nNfHAG_W75lAlXyZQu7pFM8Fuw2XfIjdjE7LxUy1f65zJ17L07qw9pDfimm6xtbte03tLGVcdB9uiiE7LpRhBELWl25eOht-_iFcWBXE6H7CGLs3VXOeaMCR668" alt="">&lt;/p>
&lt;h2 id="oxidized">Oxidized&lt;/h2>
&lt;p>Аналогичная предыдущей система. Менее приятный интерфейс, что не мешает выполнять oxidized свою основную функцию. Поддерживается 91 вендор, среди которых Cisco, Juniper, Mikrotik, D-Link, Cumulus Linux, pfSense.&lt;/p>
&lt;p>На русском языке информацию об oxidized я не нашел. Поэтому постараюсь восполнить этот пробел.&lt;/p>
&lt;p>&lt;a href="https://github.com/ytti/oxidized">Oxidized&lt;/a>  создавался как альтернатива RANCID двумя разработчиками: &lt;a href="mailto:saku@ytti.fi">Saku Ytti&lt;/a> и &lt;a href="mailto:sam@arahant.net">Samer Abdel-Hafez&lt;/a>. Кстати, парням нужен разработчик на Ruby для помощи в разработке. Явное преимущество над RANCID - удобный веб-интерфейс, взглянуть на него можно по ссылке: &lt;a href="https://oxidized.arahant.net/nodes">https://oxidized.arahant.net/nodes&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/i4WqEIrZdR5CCY2GXkF7pTAeA3eV2bx_bypxi05WaoQDxlv23UBHzZxRjf9X_SAT4hBdken7fUMJM2Z4dMDczRCKTLakIytFqVR9oaVzNTkMAjTcDWzS1X5FgAQYkASNnHksm1R2" alt="">&lt;/p>
&lt;p>В основном окне можно увидеть список устройств и сравнить их бэкапы. Хорошая фича системы - поиск по конфигурациям в верхнем правом углу. Например, можно найти конфиги всех точек доступа с SSID=bubnovd.net. Веб интерфейс очень быстрый! Работая с более, чем 300 девайсами, я не заметил сколь-нибудь заметных задержек.&lt;/p>
&lt;p>Провалившись в меню девайса, открывается список различных версий конфига этого устройства.&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/TXmPlQCSYOYAmxOnAm4wXPyOInaaq9pHvNkHojzOkXItsebPm0x3kGgJ2vTVu-zI6QWst5A1mIy5uimpGWFvPXWE23p1dHn0s9iNprGg_W_UnpYr1g3Y1lU8u13-M36ygCJYcTZi" alt="">&lt;/p>
&lt;p>Каждую версию можно сравнить с другой и увидеть что именно происходило с устройством между этими версиями.&lt;/p>
&lt;p>&lt;img src="https://lh4.googleusercontent.com/8szHMyR4qd4AeCde6ump-XxqECBNRJx6-RWpIEa36czdIqNhd86cHLHIFXar6PvgqnllZaADdI95IMZ-kpFpeHlZiCfcWnIgInbIs8koBh31MP3HzkV_LO6DjXpGgqWogxHoLSlZ" alt="">&lt;/p>
&lt;p>На вкладке stats отображается результат резервного копирования.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/j0RKpoOYBBqFjRDsom5WakOsJb15ajrwrqgHUvKCOOTaYcVIE_-Mz-P3a2-Nonlng_OpHipdBcLSWvED5dtTy7SxRf0WFVhqDgCmK35bZ51LRvsZ79F9KKCgz5bEpZ-W_RIQI5mH" alt="">&lt;/p>
&lt;p>Можно увидеть сколько попыток бэкапа были неудачными, сколько времени занимает процесс бэкапа, время последнего удачного и неудачного бэкапов.&lt;/p>
&lt;h3 id="установка">Установка&lt;/h3>
&lt;p>Я опишу установку на Debian. Установку ОС и её первичную настройку описывать не буду, благо всё уже &lt;a href="http://www.bubnovd.net/2011/03/debian.html">много&lt;/a>  &lt;a href="http://www.bubnovd.net/2011/08/linux-server-2-iptables.html">раз&lt;/a>   &lt;a href="http://www.bubnovd.net/2013/02/lvm.html">сделано&lt;/a>. Всё делал по &lt;a href="https://github.com/ytti/oxidized#debian">инструкции&lt;/a>.&lt;/p>
&lt;pre tabindex="0">&lt;code>apt install ruby ruby-dev libsqlite3-dev libssl-dev pkg-config cmake libssh2-1-dev
gem install oxidized oxidized-script oxidized-web
&lt;/code>&lt;/pre>&lt;p>Установка не вызывает вопросов, всё проходит стандартно. В описании системы не очень понятно что и как делать дальше. Я постараюсь объяснить.&lt;/p>
&lt;h3 id="конфигурация">Конфигурация&lt;/h3>
&lt;p>Запускать oxidized с правами суперпользователя - не самая лучшая идея. Поэтому создадим пользователя oxidized, с правами которого будет запускаться система бэкапа:&lt;/p>
&lt;p>&lt;code>useradd oxidized&lt;/code>&lt;/p>
&lt;p>Создадим для нового пользователя домашний каталог, в котором будут лежать конфигурационные файлы, список устройств и база git:&lt;/p>
&lt;p>&lt;code>mkdir /home/oxidized&lt;/code>&lt;/p>
&lt;p>И дадим права на этот каталог юзеру oxidized:&lt;/p>
&lt;p>&lt;code>chown oxidized:oxidized /home/oxidized&lt;/code>&lt;/p>
&lt;p>Первый запуск создаст все необходимые файлы и каталоги. Не забыли, что запускать надо под специальным пользователем?&lt;/p>
&lt;p>su - oxidized&lt;/p>
&lt;p>oxidized&lt;/p>
&lt;p>Создался каталог &lt;code>/home/oxidized/.config/oxidized&lt;/code>, в котором находится всё, что нужно для дальнейшей настройки. Основные настройки системы хранятся в файле config в формате YAML. Он состоит из нескольких частей:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Input&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Output&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Source&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Основные настройки&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Привожу свой конфиг:&lt;/p>
&lt;pre tabindex="0">&lt;code>bubnov@oxidized:~$ cat /home/oxidized/.config/oxidized/config
\---
//пользователь и пароль, от которых система будет коннектиться к девайсам
username: oxidized
password: p@ssw0rd
//вендор. Я указывал вендора для каждого устройства в файле router.db. Но можно выставить и здесь
model: junos
//Периодичность снятия бэкапа в секундах
interval: 3600
use\_syslog: false
debug: false
threads: 30
//таймаут сессии. Многие устройства не успевают выгрузить конфигурацию в дефолтные 20 секунд. Приходится увеличивать
timeout: 140
//количество попыток снять бэкап с каждого устройства, после чего считается, что бэкап сделать не удалось
retries: 3
prompt: !ruby/regexp /^(\[\\w.@-\]+\[#&amp;gt;\]\\s?)$/
//IP адрес и порт, на котором будет работать REST API (веб интерфейс по простому)
rest: 127.0.0.1:8888
next\_adds\_job: false
Vars:
//позволяет исключить из бэкапа критичную информацию, такую как snmp-community, ключи шифрования и т.п.
 remove\_secret: true
groups: {}
models: {}
pid: &amp;#34;/home/oxidized/.config/oxidized/pid&amp;#34;
log: &amp;#34;/home/oxidized/.config/oxidized/log&amp;#34;
//тип подключения к управляемым устройствам
input:
 default: ssh
 debug: false
 ssh:
    secure: false
//где хранится конфигурации (git, text, ...) и настройки хранилища
output:
 default: git
 git:
    user: oxidized
    email: admin@bubnovd.net
    repo: &amp;#34;/home/oxidized/.config/oxidized/devices.git&amp;#34;
//откуда берется информация о бэкапящихся девайсах
source:
 default: csv
 csv:
    file: &amp;#34;/home/oxidized/.config/oxidized/router.db&amp;#34;
    delimiter: !ruby/regexp /:/
    map:
     name: 0
     model: 1
     ip: 2
model\_map:
 cisco: ios
 juniper: junos
&lt;/code>&lt;/pre>&lt;p>Из важного здесь:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Логин и пароль пользователя на устройствах, под именем которого будет делаться бэкап. Я рекомендую создать на всех девайсах специального пользователя с ограниченными правами, позволяющими бэкапить. К примеру, на RouterOS это группа read&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Разделы input, output, source. В них указывается как подключаться к устройствам, где взять их список и куда выгружать бэкап&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Адрес и порт REST API. Чуть позже я объясню, почему он должен быть 127.0.0.1:8888&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>В разделе source указано, что информацию о девайсах нужно брать из CSV файла, путь к нему и порядок полей в нем. В моем случае формат такой: &lt;code>имя\_устройства:модель:ip&lt;/code>&lt;/p>
&lt;p>Сам файл router.db:&lt;/p>
&lt;pre tabindex="0">&lt;code>RB128:routeros:192.168.3.128
RB121:routeros:192.168.3.1:oxidized:drugoi\_password
sw11:dlink:192.168.3.11:::2222
&lt;/code>&lt;/pre>&lt;p>В первой строке указан роутер Mikrotik, о чем говорит поле routeros, с адресом 192.168.3.128 и называться в oxidized он будет RB128. Логин и пароль для подключения будет браться из файла config. Второе устройство RB121 имеет другую учетную запись, параметры которой указаны после IP адреса - логин:пароль. А третий девайс производства D-Link, с логином/паролем из файла config, но SSH на порту 2222.&lt;/p>
&lt;p>Стоит сказать, что устройства можно группировать по вендору или учетным записям. Об этом можно почитать в &lt;a href="https://github.com/ytti/oxidized/blob/master/docs/Configuration.md">официальной документации&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Авторизация&lt;/strong>&lt;/p>
&lt;p>На этом этапе уже можно запускать систему и набрав в браузере &lt;a href="http://localhost:8888/">http://localhost:8888&lt;/a> увидеть её интерфейс. Но у oxidized есть большой недостаток: нет аутентификации в системе. То есть любой может открыть в браузере веб-интерфейс и увидеть все конфиги ваших сетевых устройств. Разработчик занимается только системой бэкапа и смежные фичи внедрять пока не планирует.&lt;/p>
&lt;p>Обойдем этот недостаток с помощью Reverse-proxy.&lt;/p>
&lt;p>Ставим nginx:&lt;/p>
&lt;p>&lt;code>apt install nginx&lt;/code>&lt;/p>
&lt;p>И настраиваем его на работу как реверс прокси:&lt;/p>
&lt;pre tabindex="0">&lt;code>nano etc/nginx/sites-available/default
auth\_basic “Username and Password Required”;
auth\_basic\_user\_file /etc/nginx/.htpasswd;
location / {
  proxy\_set\_header Host $host;
  proxy\_set\_header X-Real-IP $remote\_addr;
  proxy\_set\_header X-Forwarded-For $proxy\_add\_x\_forwarded\_for;
  proxy\_pass http://127.0.0.1:8888;
}
&lt;/code>&lt;/pre>&lt;p>И создаем юзера и пароль:&lt;/p>
&lt;p>&lt;code>sudo htpasswd /etc/nginx/.htpasswd username&lt;/code>&lt;/p>
&lt;p>Теперь nginx будет работать на стандартном порту (или на том, который вы укажете в его настройках), при обращении к нему будет происходить авторизация и пользователь будет перенаправлен на адрес proxy_pass (127.0.0.1:8888 в нашем случае).&lt;/p>
&lt;p>Хочу обратить ваше внимание на опцию remove_secrets в конфиге. Она удаляет критичную информацию из бэкапа, такую как SNMP-community, ключи шифрования, ключи Wi-Fi. Например, Mikrotik RouterOS в дефолте умеет скрывать эти данные, если экспорт выполнять с опцией hide-sensitive. Oxidized же может исключать эти данные из конфигов любого вендора.&lt;/p>
&lt;p>Узнать что именно удаляется из конфига, можно посмотрев в описание вашего вендора в &lt;a href="https://github.com/ytti/oxidized/blob/master/lib/oxidized/model/">списке&lt;/a>. Например, для Cicso:&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/-WEhbGXGjlGVfV9lp2Sn-BLIPNBUEe2n6npRplCIgHLW8uBAlV2mT7bpABaLhqYshhXin6veWhKWQbzt5cXbCPUwzXHb03JTYGTkguJPyYM4SRZeZBw0QdErHg5C2UZGLWmp9q3W" alt="">&lt;/p>
&lt;p>Для того, чтобы oxidized стартовал как служба, сделайте следующее:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo cp /usr/local/share/gems/gems/oxidized-0.19.0/extra/oxidized.service /lib/systemd/system/
sudo systemctl enable oxidized.service
sudo systemctl start oxidized
&lt;/code>&lt;/pre>&lt;p>Я же просто прописал в crontab запуск после ребута:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo -u oxidized crontab -l
@reboot /usr/local/bin/oxidized
&lt;/code>&lt;/pre>&lt;p>Для подготовки к посту использовались следующие материалы:&lt;/p>
&lt;p>&lt;a href="https://github.com/ytti/oxidized#installation">https://github.com/ytti/oxidized#installation&lt;/a>&lt;br>
&lt;a href="https://unimus.net/">https://unimus.net/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://neckercube.com/index.php/2017/05/04/how-to-install-oxidized-for-network-configuration-backup/">https://neckercube.com/index.php/2017/05/04/how-to-install-oxidized-for-network-configuration-backup/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://packetpushers.net/install-oxidized-network-configuration-backup/">http://packetpushers.net/install-oxidized-network-configuration-backup/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.whoopis.com/core/oxidized-quickstart-tutoria.html">http://www.whoopis.com/core/oxidized-quickstart-tutoria.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://log.cyconet.org/2016/01/29/oxidized-silly-attempt-at-really-awesome-new-cisco-config-differ/">https://log.cyconet.org/2016/01/29/oxidized-silly-attempt-at-really-awesome-new-cisco-config-differ/&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://shairosenfeld.blogspot.ru/2011/03/authorization-header-in-nginx-for.html">http://shairosenfeld.blogspot.ru/2011/03/authorization-header-in-nginx-for.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://community.openhab.org/t/using-nginx-reverse-proxy-authentication-and-https/14542">https://community.openhab.org/t/using-nginx-reverse-proxy-authentication-and-https/14542&lt;/a>&lt;/p>
&lt;p>Надеюсь, эта статья поможет вам в настройке резервного копирования. Любые вопросы вы можете задать в комментариях к статье. Я постараюсь на них ответить.&lt;/p></content></item><item><title>Коммутаторы D-Link и ERPS</title><link>https://bubnovd.net/blogger/%D0%BA%D0%BE%D0%BC%D0%BC%D1%83%D1%82%D0%B0%D1%82%D0%BE%D1%80%D1%8B-d-link-%D0%B8-erps/</link><pubDate>Thu, 26 May 2016 06:07:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D0%BA%D0%BE%D0%BC%D0%BC%D1%83%D1%82%D0%B0%D1%82%D0%BE%D1%80%D1%8B-d-link-%D0%B8-erps/</guid><description>Не смог поднять второй ERPS инстанс на D-Link DES-3200. Команда create erps raps_vlan N, введенная второй раз, выдала ошибку: cannot create the r-aps vlan as the maximum number of rings supported has been exceeded.В связи с чем было произведено активное гугление и за неимением результата сего процесса, был отправлен запрос в техподдержку D-Link&amp;rsquo;a. Ответ привожу здесь:На коммутаторах DES-3200 HW ver.C1 можно создать только одно ERPS кольцо.Серия DGS-3120 rev.B1 поддерживает 4 ERPS кольца, на прошивках R3.</description><content>&lt;p>Не смог поднять второй ERPS инстанс на D-Link DES-3200. Команда create erps raps_vlan N, введенная второй раз, выдала ошибку: cannot create the r-aps vlan as the maximum number of rings supported has been exceeded.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->В связи с чем было произведено активное гугление и за неимением результата сего процесса, был отправлен запрос в техподдержку D-Link&amp;rsquo;a. Ответ привожу здесь:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->На коммутаторах DES-3200 HW ver.C1 можно создать только одно ERPS кольцо.&lt;!-- raw HTML omitted -->Серия DGS-3120 rev.B1 поддерживает 4 ERPS кольца, на прошивках R3.00 и выше.&lt;!-- raw HTML omitted -->Серия DGS-3420 поддерживает 12 ERPS колец, на прошивках R1.5 и выше.&lt;!-- raw HTML omitted -->Серия DGS-3620 поддерживает 14 ERPS колец, на прошивках R2.30 и выше.&lt;/p></content></item><item><title>The Dude и D-Link по SNMPv3</title><link>https://bubnovd.net/blogger/the-dude-%D0%B8-d-link-%D0%BF%D0%BE-snmpv3/</link><pubDate>Thu, 12 May 2016 02:03:00 +0000</pubDate><guid>https://bubnovd.net/blogger/the-dude-%D0%B8-d-link-%D0%BF%D0%BE-snmpv3/</guid><description>У меня не получилось заставить работать тандем The Dude 4.0beta3 и коммутаторы D-Link (3120, 3200) по SNMPv3. Причем по SNMPv1 и v2 оно работает на ура. И по v3 Dude и Mikrotik прекрасно вяжутся.Решил не терять время и отказаться от этой затеи, потому что: а) beta и b)на форумах пишут, что проблема действительно есть</description><content>&lt;p>У меня не получилось заставить работать тандем The Dude 4.0beta3 и коммутаторы D-Link (3120, 3200) по SNMPv3. Причем по SNMPv1 и v2 оно работает на ура. И по v3 Dude и Mikrotik прекрасно вяжутся.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Решил не терять время и отказаться от этой затеи, потому что: а) beta и b)на форумах пишут, что проблема действительно есть&lt;/p></content></item><item><title>Сегментация сети с использованием оборудования Mikrotik и D-Link</title><link>https://bubnovd.net/blogger/%D1%81%D0%B5%D0%B3%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F-%D1%81%D0%B5%D1%82%D0%B8-%D1%81-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%D0%BC-%D0%BE%D0%B1%D0%BE%D1%80%D1%83%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-mikrotik-%D0%B8-d-link/</link><pubDate>Tue, 22 Dec 2015 06:14:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D1%81%D0%B5%D0%B3%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F-%D1%81%D0%B5%D1%82%D0%B8-%D1%81-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%D0%BC-%D0%BE%D0%B1%D0%BE%D1%80%D1%83%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-mikrotik-%D0%B8-d-link/</guid><description/><content>&lt;!-- raw HTML omitted --></content></item><item><title>DHCP, Option 82</title><link>https://bubnovd.net/blogger/dhcp-option-82/</link><pubDate>Mon, 09 Nov 2015 03:38:00 +0000</pubDate><guid>https://bubnovd.net/blogger/dhcp-option-82/</guid><description>Встала задача: определять на каком порту какого свитча находится конкретный IP-адрес. На самом деле задача глобальнее, но сейчас имеет смысл именно это. В ходе гугления вышел на DHCP Option 82. Инфы много, но кроме теории важно это.Суть в том, что коммутатор в запрос DHCP добавляет два поля: Agent Remote ID (идентификатор коммутатора) и Agent Circuit ID (идентификатор порта). Казалось бы, всё просто. Но я столкнулся с некоторыми трудностями.Дело в том, что сеть поделена на сегменты для улучшения безопасности, выделения потоков трафика и уменьшения широковещательного трафика.</description><content>&lt;p>Встала задача: определять на каком порту какого свитча находится конкретный IP-адрес. На самом деле задача глобальнее, но сейчас имеет смысл именно это. В ходе гугления вышел на DHCP Option 82. Инфы много, но кроме &lt;!-- raw HTML omitted -->теории&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->важно&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->это&lt;!-- raw HTML omitted -->.&lt;!-- raw HTML omitted -->Суть в том, что коммутатор в запрос DHCP добавляет два поля: Agent Remote ID (идентификатор коммутатора) и Agent Circuit ID (идентификатор порта). Казалось бы, всё просто. Но я столкнулся с некоторыми трудностями.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Дело в том, что сеть поделена на сегменты для улучшения безопасности, выделения потоков трафика и уменьшения широковещательного трафика. Каждый сегмент имеет свою адресацию и, соответственно, свой DHCP-сервер.&lt;!-- raw HTML omitted -->Чтобы настроить работу Option 82, коммутатор необходимо настроить как DHCP-relay. Это значит, что при получении DHCP request&amp;rsquo;a коммутатор просто отправит этот запрос DHCP серверу, указанному в настройках релея. Таким образом можно уменьшить количество широковещательного трафика в пределах сегмента и иметь один DHCP сервер на несколько подсетей. Но, DHCP-relay может работать только с одним DHCP-сервером (указанным в настройках релея), соответственно, все наши сегменты получат адреса из одной подсети, что&lt;!-- raw HTML omitted -->нас совсем не устраивает.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Умные инженеры придумали для этого т.н. DHCP Snooping или DHCP Local Relay в терминологии D-Link&amp;rsquo;a. Просто указываем VLAN&amp;rsquo;ы в которых будет работать Relay и правим параметры Option 82 если требуется.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->На DHCP-сервере (в моем случае Mikrotik RouterOS) в полях Agent Remote/Circuit ID получаем коммутатор и порт, на котором висит наш адрес. В более продвинутых DHCP серверах на основе этой информации можно очень тонко сконфигурировать работу DHCP.&lt;!-- raw HTML omitted -->Так это выглядит в DHCP Leases Mikrotik. В поле Agent Circuit ID последние 2 символа - шестнадцатеричный номер порта.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Спасибо Никита Писарев aka mastakid  и blackc за разжевывание&lt;/p></content></item><item><title>Параметры STP в D-Link</title><link>https://bubnovd.net/blogger/%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D1%8B-stp-%D0%B2-d-link/</link><pubDate>Sun, 12 Jul 2015 23:38:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D1%8B-stp-%D0%B2-d-link/</guid><description>Мой вольный перевод параметров STP Reference Guide DGS-3120Edge Port - порт, напрямую подключенный к сегменту, где STP-петля заведомо не может существовать. Например, акцесс-порт до ПК.P2P Port - эти порты способны к быстрому переключению. Используются для соединения с другими бриджами (?). В RSTP/MSTP все порты, находящиеся в режиме full-duplex по дефолту становятся p2p портами. Можно изменить вручную.External Cost - метрика, показывающая относительную стоимость пересылки пакетов на порт. По дефолту коммутатор устанавливает 20000 для гигабитных линков и 200000 для 100 Мб.</description><content>&lt;p>Мой вольный перевод параметров STP Reference Guide DGS-3120&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Edge Port - порт, напрямую подключенный к сегменту, где STP-петля заведомо не может существовать. Например, акцесс-порт до ПК.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->P2P Port - эти порты способны к быстрому переключению. Используются для соединения с другими бриджами (?). В RSTP/MSTP все порты, находящиеся в режиме full-duplex по дефолту становятся p2p портами. Можно изменить вручную.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->External Cost - метрика, показывающая относительную стоимость пересылки пакетов на порт. По дефолту коммутатор устанавливает 20000 для гигабитных линков и 200000 для 100 Мб. Чем меньше значение, тем более вероятно, что порт будет использоваться для форвардинга.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Restricted Role - ограниченный порт. При значении True порт никогда не может быть Root.&lt;/p></content></item><item><title>Обзор и первоначальная настройка D-Link DFL-260e</title><link>https://bubnovd.net/blogger/%D0%BE%D0%B1%D0%B7%D0%BE%D1%80-%D0%B8-%D0%BF%D0%B5%D1%80%D0%B2%D0%BE%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-d-link-dfl-260e/</link><pubDate>Thu, 20 Jun 2013 10:35:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D0%BE%D0%B1%D0%B7%D0%BE%D1%80-%D0%B8-%D0%BF%D0%B5%D1%80%D0%B2%D0%BE%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-d-link-dfl-260e/</guid><description>Аппаратный файерволл D-Link DFL-260e используется в качестве пограничного звена между локальной сетью и Интернет.
Функций и производительности рассматриваемого файерволла вполне достаточно для обслуживания средней компании с числом активных пользователей сети около 100. Итак, что же умеет данная железяка.
Port Based VLAN IDS/IPS Потоковое антивирусное сканирование Web-фильтр IPSec/PPTP/L2TP Server/Client Ну и стандартные плюшки в виде DHCP-сервера, гибкого файерволла и т.д. При первом включении мастер просит нас задать пароль админа (дефолтный пароль стандартен для D-Link&amp;rsquo;a - admin, IP - 192.</description><content>&lt;p>Аппаратный файерволл D-Link DFL-260e используется в качестве пограничного звена между локальной сетью и Интернет.&lt;/p>
&lt;p>&lt;a href="http://mdata.yandex.net/i?path=b0626171028_img_id2740646706143100297.jpg">&lt;img src="http://mdata.yandex.net/i?path=b0626171028_img_id2740646706143100297.jpg" alt="">&lt;/a>&lt;/p>
&lt;p>Функций и производительности рассматриваемого файерволла вполне достаточно для обслуживания средней компании с числом активных пользователей сети около 100. &lt;/p>
&lt;p>Итак, что же умеет данная железяка.&lt;/p>
&lt;ol>
&lt;li>Port Based VLAN&lt;/li>
&lt;li>IDS/IPS&lt;/li>
&lt;li>Потоковое антивирусное сканирование&lt;/li>
&lt;li>Web-фильтр&lt;/li>
&lt;li>IPSec/PPTP/L2TP Server/Client&lt;/li>
&lt;li>Ну и стандартные плюшки в виде DHCP-сервера, гибкого файерволла и т.д.&lt;/li>
&lt;/ol>
&lt;p>При первом включении мастер просит нас задать пароль админа (дефолтный пароль стандартен для D-Link&amp;rsquo;a - admin, IP - 192.168.10.1), установить настройки SNMP сервера и настроить адреса интерфейсов - всё тривиально.&lt;/p>
&lt;p>Перейдем к настройке файерволла. Система встречает нас следующим экраном.&lt;/p>
&lt;p>&lt;a href="http://1.bp.blogspot.com/-AUj0j035Yn4/UcMC9WtTtnI/AAAAAAAAASE/pjyti_ASOpY/s1600/1.png">&lt;img src="https://1.bp.blogspot.com/-AUj0j035Yn4/UcMC9WtTtnI/AAAAAAAAASE/pjyti_ASOpY/s1600/1.png" alt="">&lt;/a>&lt;/p>
&lt;p>Главная страница&lt;/p>
&lt;p>Сначала определимся с политиками доступа к устройству. Выбираем в меню System - Remote Management. Тут надо понять кто и откуда сможет заходить в интерфейс устройства. По умолчанию стоит доступ только из LAN (интерфейс lan, т.е. тот, что смотрит в локалку и сеть lannet). Если в компании нет жестких политик безопасности или железка ставится в филиал, то нужно разрешить доступ и из WAN, с выбором конкретных адресов, с которых можно подключаться. Я поставил неограниченный доступ (интерфейс любой (any), сеть - любая (all-nets)), т.к. мало ли где я окажусь, когда фаер глюканет и потребуется его перезагрузка или добавление новых правил. Также можно выбрать протокол, по которому будет производиться управление. Я рекомендую https - он безопасней. Объяснять почему не буду. Кто знает - тот знает, кто не знает - примите за аксиому или сходите в вики.&lt;/p>
&lt;p>&lt;a href="http://2.bp.blogspot.com/-BW2IMxfZudA/UcMec7wVRsI/AAAAAAAAAS8/I_rPwAQevGI/s1600/4.png">&lt;img src="https://2.bp.blogspot.com/-BW2IMxfZudA/UcMec7wVRsI/AAAAAAAAAS8/I_rPwAQevGI/s1600/4.png" alt="">&lt;/a>&lt;/p>
&lt;p>Настройка управления устройством&lt;/p>
&lt;p>Теперь нужно указать устройству все возможные адреса, с которыми ему (устройству) предстоит работать. Настраивать фаер мы будем по &amp;ldquo;правильному&amp;rdquo; принципу - &amp;ldquo;Всё, что не разрешено - запрещено&amp;rdquo;.&lt;/p>
&lt;p>Идём в Objects - Address Book. По дефолту там уже созданы 2 папки - InterfaceAddresses и DHCPAddresses, и адрес all-nets - 0.0.0.0/0, означающий все возможные адреса сети. Я создал несколько адресов, принадлежащих моей локалке и папку Allowed_IP, в которой будут содержаться айпишники разрешенных сетей. В поле Address можно писать не только IP-адрес, но и целую подсеть, например 192.168.0.0/24. Не забывайте после операций по настройке сохранять конфигурацию Configuration - Save and Activate.&lt;/p>
&lt;p>&lt;a href="http://3.bp.blogspot.com/-lggYbOm45_E/UcMGKt_1pAI/AAAAAAAAASU/QvA4-ak1hUM/s1600/2.png">&lt;img src="https://3.bp.blogspot.com/-lggYbOm45_E/UcMGKt_1pAI/AAAAAAAAASU/QvA4-ak1hUM/s1600/2.png" alt="">&lt;/a>&lt;/p>
&lt;p>Добавление адресов&lt;/p>
&lt;p>Для удобства ИП-адреса лучше добавлять в группы (чтобы для этой группы потом сделать единое правило в файерволле - это гораздо удобней, чем раздавать идентичные правила для кучи адресов). Это делается выбором IP4 Group при нажатии на кнопку Add. &lt;/p>
&lt;p>&lt;a href="http://1.bp.blogspot.com/-lw0HMp7KZ2c/UcMbi-yH2AI/AAAAAAAAASs/KK9ys87GP6I/s1600/3.png">&lt;img src="https://1.bp.blogspot.com/-lw0HMp7KZ2c/UcMbi-yH2AI/AAAAAAAAASs/KK9ys87GP6I/s1600/3.png" alt="">&lt;/a>&lt;/p>
&lt;p>Создание группы&lt;/p>
&lt;p>Переходим к настройке правил фильтрации трафика. Выбираем в главном меню (слева) пункт Rules - IP Rules. По умолчанию включены несколько правил, но их мы рассматривать не будем и отключим сразу (правой кнопкой на правиле - Disable, или сразу Delete для удаления правила). Без правил DFL будет блочить весь траффик. Правила применяются сверху вниз, для этого в интерфейсе на контекстном меню правила есть кнопки для перемещения его по цепочке вверх-вниз. Т.е. если первым у вас стоит правило, блокирующее, к примеру, весь траффик на подсети Яндекса, а четвертым стоит правило, разрешающее http траффик на эти же подсети, то четвертое правило не сработает, т.к. все пакеты на эти подсети буду отсечены первым правилом.&lt;/p>
&lt;p>Создание правил рассмотрим на одном - остальные идентичны (кроме, пожалуй, http правил - там много всяких плюшек, о которых будет сказано ниже). &lt;/p>
&lt;p>Кратко по возможным правилам. Drop - просто отсекает пакеты, будто они не дошли до получателя. Отправитель при этом даже не будет знать, что вы онлайн. Reject - не пропускает пакет, но при этом отправляет ошибку ICMP или сброс TCP. Allow - разрешает трафик. NAT - собственно НАТ, то, что разрешает устройствам из локалки нормально общаться с устройствами в WAN. Forward Fast - не знаю зачем. SAT - Static Address Translation - перенаправление пакетов с заданными параметрами (ИП получателя, ИП отправителя, порт) на конкретный ИП и порт. Необходим для корректной работы сервисов за фаером (в LAN&amp;rsquo;е). Multiplex SAT - тоже не знаю, но судя по названию это SAT, только для нескольких устройств сразу.&lt;/p>
&lt;p>В примере создаем правило обновления антивируса NOD с сервера в главном офисе.&lt;/p>
&lt;ol>
&lt;li>Создаем сервис (порт), если он не стандартен. Все стандартные порты уже созданы и лежат в Objects - Services. Заходим туда. Add - TCP/UDP Service (здесь зависит от того, какой сервис вы создаете. В большинстве случаев это именно TCP/UDP сервисы). Пишем название. Выбираем тип (если не знаете - пишите TCP/UDP). Source - порт-источник, т.е. порт, с которого пойдет пакет. В нашем случае - любой. Destination - порт-получатель, куда уходит пакет (эти порты ставятся в настройках серверов). Можно перечислить несколько портов, например, 135-137, 449. Application Layer Gateway создает особые правила для сервисов. Нам пока не понадобится.&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="http://1.bp.blogspot.com/-4Vzq7xmkQeA/UcMkI4zeamI/AAAAAAAAATM/NoeL8uMrHPQ/s1600/5.png">&lt;img src="https://1.bp.blogspot.com/-4Vzq7xmkQeA/UcMkI4zeamI/AAAAAAAAATM/NoeL8uMrHPQ/s1600/5.png" alt="">&lt;/a>&lt;/p>
&lt;p>Создание нестандартного порта&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>Нажимаем Add - IP Rule. Пишем название правила (выбирайте осмысленные названия, иначе через месяц сами запутаетесь в том, что насоздавали, не говоря уже о тех, кто будет поддерживать эту систему после вас). Чтобы дать доступ к серверу в WAN определенной машине из LAN нужно выбрать правило NAT. Выбираем нужный сервис. В меню Schedule можно выбрать расписание действия правила, например, рабочие дня, нерабочие часы и т.д. Можно самим создавать расписания. Но нам пока это неважно. Source Interface - интерфейс, откуда будет идти первый пакет - выбираем LAN. Source Network - подсеть, откуда пойдет первый пакет - lannet, а лучше группа адресов, к которым применяется правило. Ведь видеорегистратору обновление антивируса не нужно, следовательно и правило на него действовать не должно. Destinatio Interface - интерфейс, куда уходит пакет - WAN. Destination Network - сеть назначения - можно all-nets, а лучше конкретный адрес из списка адресов.&lt;/p>
&lt;p>&lt;a href="http://1.bp.blogspot.com/-i6SK-dlUR_Y/UcMvXdBzmOI/AAAAAAAAATc/hgKDxYBXsuY/s1600/6.png">&lt;img src="https://1.bp.blogspot.com/-i6SK-dlUR_Y/UcMvXdBzmOI/AAAAAAAAATc/hgKDxYBXsuY/s1600/6.png" alt="">&lt;/a>&lt;/p>
&lt;p>Создание правила NAT&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Не забываем сохранять конфигурацию и проверять корректность работы правил. Если нечаянно закроете себе доступ к управлению железкой - не переживайте - при отсутствии коннекта к веб-интерфейсу в течение 30 сек. роутер скидывает настройки на предыдущие. Создаем подобные правила для всех нужных наружных сервисов. У меня созданы следующие правила: разрешен весь пинг (icmp), RDP на нестандартный порт в главный офис, DNS на соответствующие сервера, HTTP и HTTPS на разрешенные подсети, обновление антивируса.&lt;/p>
&lt;p>&lt;a href="http://4.bp.blogspot.com/-LHJ52KxP0YU/UcMwgykuMdI/AAAAAAAAATs/aAzWMsJwGng/s1600/7.png">&lt;img src="https://4.bp.blogspot.com/-LHJ52KxP0YU/UcMwgykuMdI/AAAAAAAAATs/aAzWMsJwGng/s1600/7.png" alt="">&lt;/a>&lt;/p>
&lt;p>Правила NAT&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Теперь нужно создать правила для доступа к внутренним сервисам снаружи. Для примера откроем порт RAdmin&amp;rsquo;а на один из компьютеров. Для правил проброса портов я создал папку port_forwarding, чтобы не запутаться в правилах. Создаем новое правило SAT. Выбираем нужный порт (предварительно создаем его, если нестандартный). Source Interface - wan, Source Network - нужная подсеть или all-nets, Destination Interface - core, Destination Network - wan_ip.&lt;/p>
&lt;p>&lt;a href="http://2.bp.blogspot.com/-VE9brPCcNrc/UcM39HoPikI/AAAAAAAAAUA/bYqjRnzFjMw/s1600/8.png">&lt;img src="https://2.bp.blogspot.com/-VE9brPCcNrc/UcM39HoPikI/AAAAAAAAAUA/bYqjRnzFjMw/s1600/8.png" alt="">&lt;/a>&lt;/p>
&lt;p>Перенаправление портов&lt;/p>
&lt;p>Переходим на вкладку SAT. New IP Address - IP нужного устройства (на котором запущен сервис), New Port - оставляем, если он такой же как в указанном на вкладке General сервисе или ставим новый. Например, при пробросе RDP порта не принято &amp;ldquo;светить&amp;rdquo; наружу стандартный порт 3389, поэтому в General указываем левый порт (допустим 6547), а в SAT уже стандартный - 3389. Сохраняем правило.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="http://1.bp.blogspot.com/-gSeiZN75PEs/UcM4kSWXbWI/AAAAAAAAAUE/_4kzeTCvcAM/s1600/9.png">&lt;img src="https://1.bp.blogspot.com/-gSeiZN75PEs/UcM4kSWXbWI/AAAAAAAAAUE/_4kzeTCvcAM/s1600/9.png" alt="">&lt;/a>&lt;/p>
&lt;p>Назначение&lt;/p>
&lt;p>Порт прокинули, теперь нужно разрешить прием пакетов на этот порт. Создаем новое правило. Action - allow, Source и Destination - так же, как в предыдущем правиле. &lt;/p>
&lt;p>&lt;a href="http://3.bp.blogspot.com/-aOG_5IXqphY/UcM5d5EGHnI/AAAAAAAAAUQ/DooBfBTiF8Q/s1600/10.png">&lt;img src="https://3.bp.blogspot.com/-aOG_5IXqphY/UcM5d5EGHnI/AAAAAAAAAUQ/DooBfBTiF8Q/s1600/10.png" alt="">&lt;/a>&lt;/p>
&lt;p>Разрешаем траффик&lt;/p>
&lt;p>На этом основная часть настройки DFL-260 закончена. Можно приступить к детальной настройке. &lt;/p>
&lt;p>Для начала зарегистрируем наше устройство на сайте D-Link. Идем по &lt;a href="http://security.dlink.com.tw/">ссылке&lt;/a>. Её же можно найти в Maintanance - License. Регистрируемся и получаем 90 дней бесплатного обновления IPS и антивируса. В Objects - ALG with AV/WCF находятся несколько стандартных правил с расширенным применением фильтрации. Рассмотрим некоторые из них.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>http-outbound. Правило для исходящего http траффика. Блокирует загрузку некоторых типов файлов (устанавливается на вкладке File Integrity). В остальном никаких ограничений.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>http-outbound-av. То же, что и предыдущее, но с добавлением антивирусной проверки траффика. Настраивается на вкладке Anti-Virus.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>http-outbound-wcf. То же, что и первое, но с функцией Web Content Filtering. Железкой выкачиваются списки фильтрации с сайта D-Link и весь траффик, проходящий, через железку, проверяется на содержание в этих списках. Настраивается во вкладке Web Content Filtering. Здесь вы можете настроить фильтрацию траффика. Например, запретить соц. сети, спортивные сайты, но оставить порнуху.&lt;/p>
&lt;p>&lt;a href="http://3.bp.blogspot.com/-HRVx_M5n4tA/UcM8MS3Q6QI/AAAAAAAAAUk/uRQOoVS8p8s/s1600/11.png">&lt;img src="https://3.bp.blogspot.com/-HRVx_M5n4tA/UcM8MS3Q6QI/AAAAAAAAAUk/uRQOoVS8p8s/s1600/11.png" alt="">&lt;/a>&lt;/p>
&lt;p>Web Content Filtering&lt;/p>
&lt;/li>
&lt;li>
&lt;p>http-outbound-av-wcf. Правило, включающее в себя все прелести двух предыдущих.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>На этом пока всё. Железка может ещё многое. Например, статик роутинг, IGMP, IDS/IPS, RADIUS, траффик-шейпинг и т.д., но это уже выходит за рамки этого поста. Итак уже много накалякал. Надеюсь, кому-то поможет.&lt;/p>
&lt;p>&lt;a href="http://www.ixbt.com/comm/firewall-dlink-dfl-210.shtml">Здесь&lt;/a> есть инфа по этому роутеру. Правда устаревшая, но основные моменты остались прежними.&lt;/p>
&lt;p>А лучше не париться с этим железом, а приобрести роутеры от Mikrotik, в которых подобная конфигурация делается в два счета. И помощь можно найти на любом углу рунета. В том числе в моем блоге по тегу &lt;a href="http://www.bubnovd.net/search/label/Mikrotik">Mikrotik&lt;/a>. А ещё Mikrotik дешевле. А ещё я могу &lt;a href="http://www.bubnovd.net/2016/10/MTCNA-Chelyabinsk-nov2016.html">научить&lt;/a> вас всем его премудростям.&lt;/p></content></item></channel></rss>