<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>script on Админская фамилия</title><link>https://bubnovd.net/tags/script/</link><description>Recent content in script on Админская фамилия</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 21 Dec 2017 08:52:00 +0000</lastBuildDate><atom:link href="https://bubnovd.net/tags/script/index.xml" rel="self" type="application/rss+xml"/><item><title>Проверка пропускной способности канала на Mikrotik</title><link>https://bubnovd.net/blogger/%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D0%BF%D1%80%D0%BE%D0%BF%D1%83%D1%81%D0%BA%D0%BD%D0%BE%D0%B9-%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D0%B0-%D0%BD%D0%B0-mikrotik/</link><pubDate>Thu, 21 Dec 2017 08:52:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D0%BF%D1%80%D0%BE%D0%BF%D1%83%D1%81%D0%BA%D0%BD%D0%BE%D0%B9-%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D0%B0-%D0%BD%D0%B0-mikrotik/</guid><description>Скрипт для Mikrotik RouterOS, тестирующий пропускную способность канала и записывающий результат в файл. Перед запуском создать файл isp-quality.txt и указать IP своего btest сервера в ipbandswtestserverhttps://github.com/devi1/RouterOS-scripts/tree/master/bandwidth%20test:local txAvg 0:local rxAvg 0:local ipbandswtestserver your.btest.server.ip:local btuser btest:local btpwd btest:local ts [/system clock get time]:local ContentsFile [/file get isp-quality.txt contents]:local ds [/system clock get date]:set ts ([:pick $ts 0 2].[:pick $ts 3 5].[:pick $ts 6 8]):set ds ([:pick $ds 7 11].[:pick $ds 0 3].[:pick $ds 4 6])tool bandwidth-test protocol=tcp direction=transmit address=$ipbandswtestserver duration=5s do={:set txAvg ($&amp;ldquo;tx-total-average&amp;rdquo; / 1048576 );}tool bandwidth-test protocol=tcp direction=receive address=$ipbandswtestserver duration=5s do={:set rxAvg ($&amp;ldquo;rx-total-average&amp;rdquo; / 1048576 );}/file set isp-quality.</description><content>&lt;p>Скрипт для Mikrotik RouterOS, тестирующий пропускную способность канала и записывающий результат в файл. Перед запуском создать файл isp-quality.txt и указать IP своего btest сервера в ipbandswtestserver&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;a href="https://github.com/devi1/RouterOS-scripts/tree/master/bandwidth%20test">https://github.com/devi1/RouterOS-scripts/tree/master/bandwidth%20test&lt;/a>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local txAvg 0&lt;!-- raw HTML omitted -->:local rxAvg 0&lt;!-- raw HTML omitted -->:local ipbandswtestserver your.btest.server.ip&lt;!-- raw HTML omitted -->:local btuser btest&lt;!-- raw HTML omitted -->:local btpwd btest&lt;!-- raw HTML omitted -->:local ts [/system clock get time]&lt;!-- raw HTML omitted -->:local ContentsFile [/file get isp-quality.txt contents]&lt;!-- raw HTML omitted -->:local ds [/system clock get date]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:set ts ([:pick $ts 0 2].[:pick $ts 3 5].[:pick $ts 6 8])&lt;!-- raw HTML omitted -->:set ds ([:pick $ds 7 11].[:pick $ds 0 3].[:pick $ds 4 6])&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->tool bandwidth-test protocol=tcp direction=transmit address=$ipbandswtestserver duration=5s do={&lt;!-- raw HTML omitted -->:set txAvg ($&amp;ldquo;tx-total-average&amp;rdquo; / 1048576 );&lt;!-- raw HTML omitted -->}&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->tool bandwidth-test protocol=tcp direction=receive address=$ipbandswtestserver duration=5s do={&lt;!-- raw HTML omitted -->:set rxAvg ($&amp;ldquo;rx-total-average&amp;rdquo; / 1048576 );&lt;!-- raw HTML omitted -->}&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/file set isp-quality.txt contents=&amp;quot;$ContentsFile\n$ds-$ts tx: $txAvg Mbps - rx: $rxAvg Mbps&amp;quot;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></content></item><item><title>Мikrotik RouterOS Configuration Management с помощью скриптов и какой-то там матери</title><link>https://bubnovd.net/blogger/mikrotik-routeros-configuration-management-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B2-%D0%B8-%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9-%D1%82%D0%BE-%D1%82%D0%B0%D0%BC-%D0%BC%D0%B0%D1%82%D0%B5%D1%80%D0%B8/</link><pubDate>Mon, 20 Nov 2017 09:56:00 +0000</pubDate><guid>https://bubnovd.net/blogger/mikrotik-routeros-configuration-management-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B2-%D0%B8-%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9-%D1%82%D0%BE-%D1%82%D0%B0%D0%BC-%D0%BC%D0%B0%D1%82%D0%B5%D1%80%D0%B8/</guid><description>Жизненный цикл сети часто переживает закономерный рост. В это время начинают появляться десятки и сотни устройств, конфигурация которых однотипна. Например, это могут быть маршрутизаторы в филиалах, которые имеют одинаковые настройки и отличаются только IP адресами, паролями на VPN и Wi-Fi. Внесение даже незначительных изменений на десяток устройств потребует значительного времени и концентрации.
Для управления сотнями и тысячами устройств весь цивилизованный мир уже давно использует специальные системы менеджмента конфигураций: Ansible, Chef, Puppet.</description><content>&lt;p>Жизненный цикл сети часто переживает закономерный рост. В это время начинают появляться десятки и сотни устройств, конфигурация которых однотипна. Например, это могут быть маршрутизаторы в филиалах, которые имеют одинаковые настройки и отличаются только IP адресами, паролями на VPN и Wi-Fi. Внесение даже незначительных изменений на десяток устройств потребует значительного времени и концентрации.&lt;/p>
&lt;p>Для управления сотнями и тысячами устройств весь цивилизованный мир уже давно использует специальные системы менеджмента конфигураций: &lt;a href="https://www.ansible.com/">Ansible&lt;/a>, &lt;a href="https://www.chef.io/chef/">Chef&lt;/a>, &lt;a href="https://puppet.com/">Puppet&lt;/a>. Каждая из них имеет свои плюсы и минусы.&lt;/p>
&lt;p>Но для десяти-двадцати устройств не каждый захочет выделять отдельный сервер с такой системой. Поэтому в ход идут скрипты, SSH, FTP и куча матов, когда всё это поделие роняет сразу все филиалы.&lt;/p>
&lt;p>Видео для привлечения внимания&lt;br>
Это визуализация запросов от роутеров к системе, о которой идет речь в этом посте.&lt;/p>
&lt;p>Я тоже накостылил подобную систему в соответствии со своими потребностями и расскажу о ней.&lt;/p>
&lt;p>Мои требования к системе централизованного управления:&lt;/p>
&lt;ul>
&lt;li>Надежность.  Система должна работать независимо от скорости соединения или после месячного оффлайна&lt;/li>
&lt;li>Приемлемая скорость актуализации конфигурации. Если девайс месяц не включался, то свежий конфиг он должен применить за обозримое время&lt;/li>
&lt;li>Низкая нагрузка на каналы связи и ресурсы сервера. Обновление конфигурации не должно положить интернет в ЦОДе и процессор машины&lt;/li>
&lt;li>Масштабируемость. Систему можно увеличить в 5-10 раз&lt;/li>
&lt;li>Разделение устройств по группам. Применение разных настроек к разным группам&lt;/li>
&lt;li>Обратная связь о применении конфигурации &lt;/li>
&lt;li>Постараться не использовать Flash память микротика по причине её износа&lt;/li>
&lt;/ul>
&lt;p>Из требований родились идеи к реализации:&lt;/p>
&lt;ul>
&lt;li>Чтобы обеспечить применение всех изменений, роутер должен сам обращаться за конфигурацией&lt;/li>
&lt;li>Актуализация обеспечивается за счет опроса сервера раз в час&lt;/li>
&lt;li>Чтобы не нагружать ресурсы и каналы, роутеры должны обращаться за обновлениями в разное время&lt;/li>
&lt;li>Для оповещений использовать Telegram&lt;/li>
&lt;li>Следование принципу &lt;a href="https://ru.wikipedia.org/wiki/KISS_(%D0%BF%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF)">KISS&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Для работы системы понадобится только web сервер. В моем случае apache. Как его &lt;a href="http://www.bubnovd.net/2011/03/debian.html">установить&lt;/a> и &lt;a href="http://www.bubnovd.net/2011/08/linux-server-2-iptables.html">настроить&lt;/a> я &lt;a href="http://www.bubnovd.net/2011/10/blog-post.html">рассказывать&lt;/a> не буду, к тому же необязательно это должен быть апач.&lt;/p>
&lt;p>Логика такая: на веб сервере лежат RouterOS скрипты, с определенным именованием. Имя скрипта указывает на его версию и группу устройств, для которой должна примениться конфигурация. Маршрутизаторы с периодичностью раз в час обращаются к серверу за новым конфигом. Если новый конфиг есть, то он скачивается на роутер и выполняется. Если конфига нет - ничего не скачивается, что позволяет не дергать лишний раз быстроубиваемую память.&lt;/p>
&lt;p>Чтобы начать применять подобную систему, надо привести конфиги всех роутеров к одному стандарту. К примеру, не так давно в RouterOS появилась новая фича: Interface List. Теперь можно одним правилом в фаерволе заменить несколько правил, если их надо применить к разным интерфейсам. Наш скрипт должен добавить в интерфейс-лист интерфейс, который &amp;ldquo;смотрит&amp;rdquo; к провайдеру. На одном роутере это может быть eth1, на другом PPPoE, на третьем - вообще wlan1.&lt;/p>
&lt;p>Как в таком случае поступить? Надо как-то выделить внешние интерфейсы. Например, добавить к ним комментарий &amp;ldquo;WAN&amp;rdquo;.&lt;br>
Также стОит привести к одному виду фаервол, Queues - вообще всё, что есть на роутерах. И создать отдельную учетную запись,  с правами которой будут выполняться скрипты. Как создать скрипт для быстрой настройки роутеров я расскажу в следующем посте.&lt;/p>
&lt;p>Принцип именования скриптов: A000, где А - группа устройств, а номер - версия скрипта.&lt;/p>
&lt;p>Каждому роутеру в планировщик добавляем такие строки:&lt;/p>
&lt;pre tabindex="0">&lt;code>/system scheduler
/tool fetch url=&amp;#34;http://rbconf.bubnovd.net/A001&amp;#34; user=mikrotik-ninja password=mikrotik-ninja.ru
/import A001
&lt;/code>&lt;/pre>&lt;p>Это задание скачивает с сервера скрипт и выполняет его. Для обеспечения хоть какой-то безопасности, доступ к серверу только по паролю, который указан в задании.&lt;/p>
&lt;p>Сами скрипты лежат на сервере и выглядят примерно так:&lt;/p>
&lt;pre tabindex="0">&lt;code>/log info message=&amp;#34;.....................Autoconfiguration started.....................&amp;#34;
#Версия внедряемой конфигурации
#Описание задачи, которую выполняет скрипт: Удаление пользователя
#Первая часть скрипта нужна для только для определения  версии конфига, который нужно применить следующим
:local ver
:set $ver A001
#Версия следующей конфигурации
:local verNext
#Версия предыдущей конфигурации
:local verPrev
:set $verNext (&amp;#34;A&amp;#34; . \[tostr (\[tonum \[pick $ver 1 4\]\] + 1)\])
:set $verPrev (&amp;#34;A&amp;#34; . \[tostr (\[tonum \[pick $ver 1 4\]\] - 1)\])
#Добавляем нули, если надо
        if (\[:len $verNext\] =2) do={
                :set $verNext (\[pick $verNext 0 1\] . &amp;#34;00&amp;#34; . \[pick $verNext (\[len $verNext\] -1) (\[len $verNext\])\])} else={
                if (\[:len $verNext\] =3) do={
                        :set $verNext (\[pick $verNext 0 1\] . &amp;#34;0&amp;#34; . \[pick $verNext (\[len $verNext\] -2) (\[len $verNext\])\])} else={}}
        if (\[:len $verPrev\] =2) do={
                :set $verPrev (\[pick $verPrev 0 1\] . &amp;#34;00&amp;#34; . \[pick $verPrev (\[len $verPrev\] -1) (\[len $verPrev\])\])} else={
                if (\[:len $verPrev\] =3) do={
                        :set $verPrev (\[pick $verPrev 0 1\] . &amp;#34;0&amp;#34; . \[pick $verPrev (\[len $verPrev\] -2) (\[len $verPrev\])\])} else={}}
\# Вторая часть скрипта - наша рабочая конфигурация
#####
#####Тут код конфигурации
#####
if (\[len \[/user find name=&amp;#34;prosvirnin&amp;#34;\]\]&amp;gt;0) do={/user remove \[find name=&amp;#34;prosvirnin&amp;#34;\]} else={/log info message=&amp;#34;User not exist&amp;#34;}
#####
#/log info message=&amp;#34;Creating script $ver&amp;#34;
#/system script add name=$ver source=&amp;#34;/log info message=done&amp;#34;
#/log info message=&amp;#34;Script $ver created. Starting&amp;#34;
#/system script run $ver
#/log info message=&amp;#34;Removing script $ver&amp;#34;
#/system script remove $ver
\##### Или в скрипте выше
\# Третья часть - настройка планировщика для следующего изменения, оповещение и чистка файлов
/system scheduler set autoconf on-event=&amp;#34;/tool fetch url=\\&amp;#34;http://rbconf.bubnovd.net/$verNext\\&amp;#34; user=mikrotik-ninja password=mikrotik-ninja.ru\\r\\n
/import $verNext&amp;#34;
/log info message=&amp;#34;...................Autoconfiguration complete...................&amp;#34;
/delay 3
#Удаляем остатки предыдущих скриптов, если не удалились
if (\[:len \[/file find name~&amp;#34;sendMessage&amp;#34;\]\] &amp;gt;0) do={/file remove \[/file find name~&amp;#34;sendMessage&amp;#34;\]} else={/log info message=&amp;#34;No item for delete&amp;#34;}
if (\[:len \[/file find name=&amp;#34;$verPrev&amp;#34;\]\] &amp;gt;0) do={/file remove \[/file find name=&amp;#34;$verPrev&amp;#34;\]} else={/log info message=&amp;#34;No item for delete&amp;#34;}
/delay 3
#Отправляем уведомление о выполнении
:local name \[/system identity get name\]
/tool fetch keep-result=no url=&amp;#34;https://api.telegram.org/bot-nomer-bota:tut-vasha-ssylka/sendMessage\\?chat\_id=-12345678&amp;amp;text=$ver is complete on $name&amp;#34;
/delay 3
if (\[:len \[/file find name~&amp;#34;sendMessage&amp;#34;\]\] &amp;gt;0) do={/file remove \[/file find name~&amp;#34;sendMessage&amp;#34;\]} else={/log info message=&amp;#34;No item for delete&amp;#34;}
/delay 3
/file remove $ver
&lt;/code>&lt;/pre>&lt;p>Сначала описывается версия конфига и каким будет следующая версия. Затем после комментария &amp;ldquo;#####Тут код конфигурации&amp;rdquo; перечисляются команды, которые должен выполнить роутер. Иногда роутер должен выполнить сложный скрипт. На этот случай есть закомментированный блок кода со скриптом. Сам сложный скрипт нужно описать в поле &lt;code>source=&amp;quot;tut\_sam\_script&amp;quot; &lt;/code>&lt;/p>
&lt;p>После выполнения команд меняется задание в планировщике - указываем следующую версию скрипта, который надо применить. С этого момента роутер будет пытаться скачать его с сервера. Дальше шлём уведомление и удаляем файлы, которые могли создастся в ходе выполнения задания. Как слать оповещения в Telegram описано на &lt;a href="https://1spla.ru/blog/telegram_bot_for_mikrotik">бескрайних&lt;/a> &lt;a href="https://habrahabr.ru/post/314108/">просторах&lt;/a> интернета и повторяться я не буду.&lt;/p>
&lt;p>Очень важно предусмотреть в скрипте всё возможное и невозможное и каждая команда должна начинаться с проверки &lt;code>if (...) do={&lt;/code> , а заканчиваться &lt;code>} else={/log info message=&amp;quot;User not exist&amp;quot;}&lt;/code> . У одного из моих роутеров был баг, из-за которого не отображался wireless интерфейс. И без проверки его существования, скрипт просто вываливался с ошибкой. А значит, не менялась запись в планировщике и следующий скрипт тоже не выполнялся.&lt;/p>
&lt;p>Перед применением конфигурации на всю сеть нужно проверить правильность написания скрипта - даже опытный скриптописатель может чего-то не учесть и хорошо, если это какая-то мелочь и она не положит всю сеть. Поэтому перед созданием нового файла конфигурации, я проверяю  команды на работающем в продакшене роутере. А затем использую отдельную группу из 20 разнотипных роутеров (в основном это разный тип подключения к сети, остальные настройки везде идентичны) для тестирования скрипта. Эти роутеры опрашивают сервер чаще, чем остальные и после применения настроек я какое-то время наблюдаю за их поведением, а затем распространяю нововведения на остальную сеть.&lt;/p>
&lt;p>Чего не хватает в моём подходе:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Безопасность&lt;/strong>. Хоть доступ на сервер со скриптами ограничен паролем, но этот пароль в открытом виде хранится на роутерах. Вся конфигурация передается по сети в открытом виде. У меня всё это летает внутри шифрованного VPN и я запрещаю вам использовать это на нешифрованных публичных каналах! Внутреннего нарушителя тоже никто не отменял и внутри VPN это не очень безопасно. Можно Нужно! использовать https вместо http.&lt;/li>
&lt;li>&lt;strong>Информативные оповещения&lt;/strong>. При возникновении ошибки, неплохо было бы сообщать о ней&lt;/li>
&lt;li>&lt;strong>Возможны только изменения&lt;/strong>. Хочется ещё и читать конфиги и выделять места, отличные от стандарта. Но это задача уже другого класса систем&lt;/li>
&lt;/ul>
&lt;p>Через полгода после внедрения этой системы, на &lt;a href="https://mum.mikrotik.com/2016/RU/agenda/EN">встрече пользователей Mikrotik&lt;/a> Михаил Москалев   рассказал об аналогичном подходе. Михаил продвинулся дальше и применил модульный подход к конфигурации. Его презентацию можно посмотреть по &lt;a href="https://mum.mikrotik.com//presentations/RU16/presentation_3759_1475646696.pdf">ссылке&lt;/a>.&lt;br>
Такой же подход использует система блокировки рекламы для Mikrotik &lt;a href="https://stopad.cgood.ru/">https://stopad.cgood.ru/&lt;/a> . &lt;br>
Постоянный докладчик нашей &lt;a href="https://sysadminka.org/">#Sysadminka&lt;/a> написал свою систему управления конфигурациями. Она доступна на &lt;a href="https://github.com/xoma9/ops-tool">github&lt;/a>. Посмотреть можно на &lt;a href="https://www.youtube.com/watch?v=ZOOsY4r6qks">YouTube&lt;/a>.&lt;/p>
&lt;p>В следующем посте я опишу ещё один свой скриптик с использованием Excel, который помогает младшим админам настраивать первичную конфигурацию роутеров без вникания в WinBox и настройки RouterOS.&lt;/p>
&lt;p>P.S.: Видео в посте создано с помощью &lt;a href="http://www.bubnovd.net/2017/06/grep.html">grep&lt;/a> и &lt;a href="http://logstalgia.io/">logstalgia&lt;/a>.&lt;/p></content></item><item><title>Yet another RouterOS script</title><link>https://bubnovd.net/blogger/yet-another-routeros-script/</link><pubDate>Wed, 09 Dec 2015 22:41:00 +0000</pubDate><guid>https://bubnovd.net/blogger/yet-another-routeros-script/</guid><description>Скрипт ищет интерфейс sstp клиента, имя которого содержит в себе строку video, копирует имя интерфейса, имя пользователя и пароль для подключения, а так же адрес vpn сервера. Удаляет упоминание об этом интерфейсе в настройках OSPF (т.к. после удаления появится интерфейс unknown, а без удаления интерфейса новый не создастся - имена одинаковые), создает нешифрованное соединение pptp с аналогичными настройками и вписывает его в параметры OSPF.#!Ищет sstp-интерфейс с именем, содержащим video#! копирует его настройки, убирает номер порта и#!</description><content>&lt;p>Скрипт ищет интерфейс sstp клиента, имя которого содержит в себе строку video, копирует имя интерфейса, имя пользователя и пароль для подключения, а так же адрес vpn сервера. Удаляет упоминание об этом интерфейсе в настройках OSPF (т.к. после удаления появится интерфейс unknown, а без удаления интерфейса новый не создастся - имена одинаковые), создает нешифрованное соединение pptp с аналогичными настройками и вписывает его в параметры OSPF.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->#!Ищет sstp-интерфейс с именем, содержащим video&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->#! копирует его настройки, убирает номер порта и&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->#! создает pptp интерфейс с подобными настройками&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->#! Copyright Dmitry Bubnov &lt;a href="http://bubnovd.net">http://bubnovd.net&lt;/a>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/interface sstp-client&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local name [get [find name~&amp;ldquo;video&amp;rdquo;] name]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local srv [get [find name~&amp;ldquo;video&amp;rdquo;] connect-to]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local conto [:pick $srv 0 ([:len $srv]-4)]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local user [get [find name~&amp;ldquo;video&amp;rdquo;] user]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local pwd [get [find name~&amp;ldquo;video&amp;rdquo;] password]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/routing ospf interface remove [find interface=$name]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->remove $name&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/interface pptp-client add connect-to=$conto user=$user password=$pwd name=$name allow=mschap2 disabled=no profile=default&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/routing ospf interface add interface=$name cost=9 network-type=point-to-point &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Он же в Python для пакетного изменения:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->#!/usr/bin/env python&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->from RosAPI import Core&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->mas = []&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->with open(&amp;ldquo;list.txt&amp;rdquo;) as f:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->mas = f.read().splitlines()&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->for i in range(len(mas)):&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->try:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->a = Core(mas[i])&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->except:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->print &amp;ldquo;No Connection&amp;rdquo;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->else:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->a.login(&amp;ldquo;user&amp;rdquo;, &amp;ldquo;password&amp;rdquo;)&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->print i&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->a.talk([&amp;quot;/system/script/add&amp;quot;, &amp;ldquo;=name=&amp;rdquo; + &amp;ldquo;temp&amp;rdquo;, &amp;ldquo;=source=&amp;rdquo; + &amp;lsquo;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->#! Copyright Dmitry Bubnov http://bubnovd.net\r\n&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/interface sstp-client\r\n:local name [get [find name~&amp;quot;video&amp;quot;] name]\r\n:local srv [get [find name~&amp;quot;video&amp;quot;] connect-to]\r\n:local conto [:pick $srv 0 ([:len $srv]-4)]\r\n:local user [get [find name~&amp;quot;video&amp;quot;] user]\r\n:local pwd [get [find name~&amp;quot;video&amp;quot;] password]\r\n/routing ospf interface remove [find interface=$name]\r\nremove $name\r\n/interface pptp-client add connect-to=$conto user=$user password=$pwd name=$name allow=mschap2 disabled=no profile=default\r\n/routing ospf interface add interface=$name cost=9 network-type=point-to-point&amp;rsquo;])&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->a.talk([&amp;quot;/system/script/run&amp;quot;, &amp;ldquo;=.id=&amp;rdquo; + &amp;ldquo;temp&amp;rdquo;])&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->a.talk([&amp;quot;/system/script/remove&amp;quot;, &amp;ldquo;=.id=&amp;rdquo; + &amp;ldquo;temp&amp;rdquo;])&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->print mas[i]  &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></content></item><item><title>Самый полный мануал по резервированию интернета на Mikrotik RouterOS</title><link>https://bubnovd.net/blogger/%D1%81%D0%B0%D0%BC%D1%8B%D0%B9-%D0%BF%D0%BE%D0%BB%D0%BD%D1%8B%D0%B9-%D0%BC%D0%B0%D0%BD%D1%83%D0%B0%D0%BB-%D0%BF%D0%BE-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8E-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82%D0%B0-%D0%BD%D0%B0-mikrotik-routeros/</link><pubDate>Thu, 05 Mar 2015 22:06:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D1%81%D0%B0%D0%BC%D1%8B%D0%B9-%D0%BF%D0%BE%D0%BB%D0%BD%D1%8B%D0%B9-%D0%BC%D0%B0%D0%BD%D1%83%D0%B0%D0%BB-%D0%BF%D0%BE-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8E-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82%D0%B0-%D0%BD%D0%B0-mikrotik-routeros/</guid><description>В сети много мануалов по фэйловеру на RouterOS и подобрать нужный под конкретные цели иногда проблематично. В ходе своих экспериментов я выяснил, что наиболее универсальным является этот способ. Но у меня возникло несколько вопросов, ответы на которые я пока не нашел.
/ip route add dst-address=**Host1** gateway=GW1 scope=**10** add dst-address=**Host2** gateway=GW2 scope=**10** /ip route add distance=1 gateway=**Host1** routing-mark=ISP1 check-gateway=ping add distance=2 gateway=**Host2** routing-mark=ISP1 check-gateway=ping /ip route add distance=1 gateway=**Host2** routing-mark=ISP2 check-gateway=ping add distance=2 gateway=**Host1** routing-mark=ISP2 check-gateway=ping Я делаю немного по-другому: первые две строки точно такие же, а дальше:</description><content>&lt;p>В сети много мануалов по фэйловеру на RouterOS и подобрать нужный под конкретные цели иногда проблематично. В ходе своих экспериментов я выяснил, что наиболее универсальным является &lt;a href="http://wiki.mikrotik.com/wiki/Advanced_Routing_Failover_without_Scripting">этот&lt;/a> способ. Но у меня возникло несколько вопросов, ответы на которые я пока не нашел.&lt;/p>
&lt;pre tabindex="0">&lt;code>/ip route
add dst-address=**Host1** gateway=GW1 scope=**10**
add dst-address=**Host2** gateway=GW2 scope=**10**
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/ip route
add distance=1 gateway=**Host1** routing-mark=ISP1 check-gateway=ping
add distance=2 gateway=**Host2** routing-mark=ISP1 check-gateway=ping
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/ip route
add distance=1 gateway=**Host2** routing-mark=ISP2 check-gateway=ping
add distance=2 gateway=**Host1** routing-mark=ISP2 check-gateway=ping
&lt;/code>&lt;/pre>&lt;p>Я делаю немного по-другому: первые две строки точно такие же, а дальше:&lt;/p>
&lt;pre tabindex="0">&lt;code>/ip route
add distance=1 gateway=**Host1** check-gateway=ping
add distance=2 gateway=**Host2** check-gateway=ping
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>/ip route
add distance=1 gateway=**GW1** routing-mark=ISP1
add distance=1 gateway=GW**2** routing-mark=ISP2
&lt;/code>&lt;/pre>&lt;p>В первом варианте мне непонятно зачем пускать трафик, маркированный ISP1 по второму каналу и аналогично с ISP2. Чтобы не рвалась сессия? Она все равно рвется. В общем, я делаю по своему варианту.&lt;/p>
&lt;p>Как оно работает?&lt;br>
&lt;code>add dst-address=Host1 gateway=GW1 scope=10&lt;/code> указываем, что трафик до Host1 будет ходить через провайдера ISP1. Аналогично со вторым.&lt;/p>
&lt;p>&lt;code>add distance=1 gateway=Host1 check-gateway=ping&lt;/code> указывает шлюзом по умолчанию Host1. Тем самым создается рекурсивный маршрут через GW1. Проверяется доступность Host1 пингом. Если Host1 доступен, то шлюз - GW1, если не доступен, но доступен Host2, трафик идет через GW2.&lt;/p>
&lt;p>Маркировка маршрутов необходима для того, чтобы трафик, пришедший в один из интерфейсов не улетел во второй, если метрика второго ниже. Маркировка создается в таблице Mangle фаервола:&lt;/p>
&lt;pre tabindex="0">&lt;code>add chain=prerouting in-interface=ISP1-int action=mark-connection new-connection-mark=ISP1 passthrough=yes 
add chain=prerouting connection-mark=ISP1 action=mark-routing new-routing-mark=ISP1
add chain=output connection-mark=ISP1 action=mark-routing new-routing-mark=ISP1
&lt;/code>&lt;/pre>&lt;p>Так же по второму провайдеру.&lt;/p>
&lt;p>Эта схема прекрасно работает при статическом IP. Но как быть с DHCP, PPP и т.д. А всё просто - в настройках DHCP/PPP-клиента отключаем Add Default Route. И добавляем необходимый маршрут руками. Единственная проблема - адрес шлюза может смениться. В таком случае необходимо применение скриптов. Я написал небольшой скрипт для работы с USB-модемом, который проверяет правильный ли шлюз указан в строке &lt;code>8.8.4.4 gw GW2&lt;/code>. PPP-интерфейс в моем случае называется &lt;code>modem&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>:local testIP 8.8.4.4/32
:local modemGW \[/ip address get \[find interface=&amp;#34;modem&amp;#34;\] network\]
if ($modemGW!=(\[/ip route get \[find dst-address=$testIP\] gateway\])) do={
\[/ip route set \[find dst-address=$testIP\] gateway $modemGW\]}
&lt;/code>&lt;/pre>&lt;p>В Scheduler добавляем расписание для этого скрипта, чтобы выполнялся раз в минуту. На основе моего скрипта можно создать свой для любого другого типа подключения.&lt;br>
Для нетерпеливых привожу полный список команд, необходимый для настройки модема в качестве резервного канала. Всё, что вам нужно - просто скопировать текст и вставить его в терминал. Основной придется отмаркировать и прописать в маршрутизации руками:&lt;/p>
&lt;pre tabindex="0">&lt;code>/ip firewall mangle
add chain=input in-interface=modem action=mark-connection new-connection-mark=modem
add chain=output connection-mark=modem action=mark-routing new-routing-mark=modem
/ip route
add dst-address=8.8.4.4/32 gateway=\[/ip address get \[find interface=&amp;#34;modem&amp;#34;\] network\] distance=1 scope=10
add distance=2 gateway=8.8.4.4 scope=10 check-gateway=ping
add dst-address=0.0.0.0/0 gateway=\[/ip address get \[find interface=&amp;#34;modem&amp;#34;\] network\] distance=1 scope=10 routing-mark=modem
/interface ppp-client set modem dial-on-demand=no add-default-route=no
/system script
add name=modemGW source=&amp;#34;:local testIP 8.8.4.4/32\\r\\n:local modemGW \[/ip address get \[find interface=\\&amp;#34;modem\\&amp;#34;\] network\]\\r\\nif (\\$modemGW!=(\[/ip route get \[find dst-address=\\$testIP\] gateway\])) do={\\r\\n\[/ip route set \[find dst-address=\\$testIP\] gateway \\$modemGW\]}&amp;#34;
/system scheduler
add name=checkGW interval=00:01:00 on-event=modemGW
&lt;/code>&lt;/pre>&lt;p>Есть ещё один способ фэйловера. Делается он только с помощью скриптов. Полное его описание &lt;a href="http://habrahabr.ru/post/141785/">здесь&lt;/a>. Ниже скрипт для его мгновенного создания:&lt;/p>
&lt;pre tabindex="0">&lt;code>/system script
add name=SetGlobalParameters source=&amp;#34;#Main interface name\\r\\n:global MainIf \[/interface get \[find comment~\\&amp;#34;MainINT\\&amp;#34;\] name\]\\r\\n#Reserve interface name\\r\\n:global RsrvIf \[/interface get \[find comment~\\&amp;#34;RsrvINT\\&amp;#34;\] name\]\\r\\n#Main interface ip address\\r\\n:global MainIfAddress \\&amp;#34;\\&amp;#34;\\r\\n#Reserve interface ip address\\r\\n:global RsrvIfAddress \\&amp;#34;\\&amp;#34;&amp;#34;
add name=DefineMainIfIp source=&amp;#34;:global MainIf\\r\\n:global MainIfAddress \\&amp;#34;\\&amp;#34;\\r\\n:set MainIfAddress \[/ip address get \[find interface=$MainIf\] address\]&amp;#34;
add name=DefineReservedIfIp source=&amp;#34;:global RsrvIf\\r\\n:global RsrvIfAddress \\&amp;#34;\\&amp;#34;\\r\\n:set RsrvIfAddress \[/ip address get \[find interface=$RsrvIf\] address\]&amp;#34;
add name=ConnectionCheck source=&amp;#34;:global MainIf\\r\\n:global RsrvIf\\r\\n:global MainIfAddress\\r\\n:global RsrvIfAddress\\r\\n\\r\\n:local PingCount 3\\r\\n\\r\\n#yandex DNS\\r\\n:local PingTarget1 77.88.8.8\\r\\n\\r\\n#OpenDNS\\r\\n:local PingTarget2 208.67.222.222\\r\\n\\r\\n#google dns\\r\\n:local PingTarget3 8.8.8.8\\r\\n\\r\\n#Check main internet connection\\r\\n\\r\\n:local MainIfInetOk false;\\r\\n\\r\\nif (\\$MainIfAddress=\\&amp;#34;\\&amp;#34;) do={delay 5}\\r\\n\\r\\nif (\\$MainIfAddress!=\\&amp;#34;\\&amp;#34;) do={\\r\\n\\r\\n:local PingResult1 \[/ping \\$PingTarget1 count=\\$PingCount interface=\\$MainIf\]\\r\\n:local PingResult2 \[/ping \\$PingTarget2 count=\\$PingCount interface=\\$MainIf\]\\r\\n:local PingResult3 \[/ping \\$PingTarget3 count=\\$PingCount interface=\\$MainIf\]\\r\\n:set MainIfInetOk ((\\$PingResult1 + \\$PingResult2 + \\$PingResult3) &amp;gt;= (2 \* \\$PingCount))\\r\\n}\\r\\n\\r\\n#Check reserved internet connection\\r\\n:local RsrvIfInetOk false;\\r\\n\\r\\nif (\\$RsrvIfAddress=\\&amp;#34;\\&amp;#34;) do={delay 5}\\r\\n\\r\\nif (\\$RsrvIfAddress!=\\&amp;#34;\\&amp;#34;) do={\\r\\n:local PingResult1 \[/ping \\$PingTarget1 count=\\$PingCount interface=\\$RsrvIf\]\\r\\n\\r\\n:local PingResult2 \[/ping \\$PingTarget2 count=\\$PingCount interface=\\$RsrvIf\]\\r\\n:local PingResult3 \[/ping \\$PingTarget3 count=\\$PingCount interface=\\$RsrvIf\]\\r\\n\\r\\n:set RsrvIfInetOk ((\\$PingResult1 + \\$PingResult2 + \\$PingResult3) &amp;gt;=(2 \* \\$PingCount))\\r\\n}\\r\\n\\r\\n:put \\&amp;#34;MainIfInetOk=\\$MainIfInetOk\\&amp;#34;\\r\\n:put \\&amp;#34;RsrvIfInetOk=\\$RsrvIfInetOk\\&amp;#34;\\r\\n\\r\\nif (!\\$MainIfInetOk) do={\\r\\n/log error \\&amp;#34;Main internet connection error\\&amp;#34;\\r\\n}\\r\\n\\r\\nif (!\\$RsrvIfInetOk) do={\\r\\n/log error \\&amp;#34;Reserve internet connection error\\&amp;#34;\\r\\n}\\r\\n\\r\\n:local MainGWDistance \[/ip route get \[find comment~\\&amp;#34;MainGW\\&amp;#34;\] distance\]\\r\\n:local RsrvGWDistance \[/ip route get \[find comment~\\&amp;#34;RsrvGW\\&amp;#34;\] distance\]\\r\\n:put \\&amp;#34;MainGWDistance=\\$MainGWDistance\\&amp;#34;\\r\\n:put \\&amp;#34;RsrvGWDistance=\\$RsrvGWDistance\\&amp;#34;\\r\\n\\r\\n#SetUp gateways\\r\\nif (\\$MainIfInetOk &amp;amp;&amp;amp; (\\$MainGWDistance &amp;gt;= \\$RsrvGWDistance)) do={\\r\\n/ip route set \[find comment~\\&amp;#34;MainGW\\&amp;#34;\] distance=1\\r\\n/ip route set \[find comment~\\&amp;#34;RsrvGW\\&amp;#34;\] distance=2\\r\\n/log info \\&amp;#34;Switch to main internet connection\\&amp;#34;\\r\\n}\\r\\n\\r\\nif (!\\$MainIfInetOk &amp;amp;&amp;amp; \\$RsrvIfInetOk &amp;amp;&amp;amp; (\\$MainGWDistance &amp;lt;= \\$RsrvGWDistance)) do={\\r\\n/ip route set \[find comment~\\&amp;#34;MainGW\\&amp;#34;\] distance=2\\r\\n/ip route set \[find comment~\\&amp;#34;RsrvGW\\&amp;#34;\] distance=1\\r\\n/log warning \\&amp;#34;Switch to reserve internet connection\\&amp;#34;\\r\\n}&amp;#34;
run SetGlobalParameters
/system scheduler
add name=SetGlobalParameters start-time=startup on-event=SetGlobalParameters
add name=DefineMainIfIp interval=00:00:27 on-event=DefineMainIfIp
add name=DefineReservedIfIp interval=00:00:27 on-event=DefineReservedIfIp
add name=ConnectionCheck interval=00:01:00 on-event=ConnectionCheck
&lt;/code>&lt;/pre></content></item><item><title>Скрипт для проверки наличия USB-модема на RouterOS</title><link>https://bubnovd.net/blogger/%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8-%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D1%8F-usb-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BC%D0%B0-%D0%BD%D0%B0-routeros/</link><pubDate>Sun, 01 Mar 2015 20:42:00 +0000</pubDate><guid>https://bubnovd.net/blogger/%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8-%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D1%8F-usb-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BC%D0%B0-%D0%BD%D0%B0-routeros/</guid><description>Понадобился скрипт, определяющий наличие USB-модема, подключенного к Mikrotik. Присылает на почту название модема и его серийник. Хорошо бы допилить скрипт до отправки уровня сигнала и количества денег на счете, но мои модемы не дают доступа к своему меню - надо шить.:log info &amp;ldquo;Starting Modem Info Script&amp;hellip;&amp;rdquo;;:local sysname [/system identity get name];:local sysver [/system package get system version];:local mname [/system resource usb get 1 value-name=name];:local mnumber [/system resource usb get 1 value-name=serial-number];:local smtpserv [:resolve &amp;ldquo;smtp.</description><content>&lt;p>Понадобился скрипт, определяющий наличие USB-модема, подключенного к Mikrotik. Присылает на почту название модема и его серийник. Хорошо бы допилить скрипт до отправки уровня сигнала и количества денег на счете, но мои модемы не дают доступа к своему меню - надо шить.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:log info &amp;ldquo;Starting Modem Info Script&amp;hellip;&amp;rdquo;;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local sysname [/system identity get name];&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local sysver [/system package get system version];&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local mname [/system resource usb get 1 value-name=name];&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local mnumber [/system resource usb get 1 value-name=serial-number];&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local smtpserv [:resolve &amp;ldquo;smtp.mail.ru&amp;rdquo;];&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local Eaccount &amp;ldquo;&lt;a href="mailto:mail@mail.ru">mail@mail.ru&lt;/a>&amp;rdquo;;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local pass &amp;ldquo;your_password&amp;rdquo;;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:log info &amp;ldquo;Collecting Information&amp;rdquo;;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:delay 5;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:log info &amp;ldquo;Sending Information via E-mail&amp;hellip;&amp;rdquo;;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/tool e-mail send from=&amp;quot;&amp;lt;$Eaccount&amp;gt;&amp;quot; to=$Eaccount server=$smtpserv &amp;lt;/span&amp;gt;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->port=587 user=$Eaccount password=$pass start-tls=yes &amp;lt;/span&amp;gt;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->subject=(&amp;quot;$sysname Modem Information (&amp;quot; . [/system clock get date] . &amp;ldquo;)&amp;rdquo;) &amp;lt;/span&amp;gt;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->body=(&amp;quot;$sysname Modem.\nTime and Date stamp: &amp;quot; . [/system clock get time] . &amp;quot; &amp;quot; . &amp;lt;/span&amp;gt;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->[/system clock get date] . &amp;ldquo;\nModem $mname, SN: $mnumber&amp;rdquo;);&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:log info &amp;ldquo;Modem Info Complete!&amp;rdquo;;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></content></item></channel></rss>