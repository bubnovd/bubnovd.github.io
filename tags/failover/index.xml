<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>failover on Bubnovd</title><link>https://bubnovd.github.io/tags/failover/</link><description>Recent content in failover on Bubnovd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 Jul 2017 04:02:00 +0000</lastBuildDate><atom:link href="https://bubnovd.github.io/tags/failover/index.xml" rel="self" type="application/rss+xml"/><item><title>DHCP Failover with RouterOS</title><link>https://bubnovd.github.io/blogger/dhcp-failover-with-routeros/</link><pubDate>Tue, 18 Jul 2017 04:02:00 +0000</pubDate><guid>https://bubnovd.github.io/blogger/dhcp-failover-with-routeros/</guid><description/><content>&lt;!-- raw HTML omitted --></content></item><item><title>Как Windows работает с несколькими шлюзами по умолчанию</title><link>https://bubnovd.github.io/blogger/%D0%BA%D0%B0%D0%BA-windows-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82-%D1%81-%D0%BD%D0%B5%D1%81%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%B8%D0%BC%D0%B8-%D1%88%D0%BB%D1%8E%D0%B7%D0%B0%D0%BC%D0%B8-%D0%BF%D0%BE-%D1%83%D0%BC%D0%BE%D0%BB%D1%87%D0%B0%D0%BD%D0%B8%D1%8E/</link><pubDate>Mon, 20 Jul 2015 23:56:00 +0000</pubDate><guid>https://bubnovd.github.io/blogger/%D0%BA%D0%B0%D0%BA-windows-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82-%D1%81-%D0%BD%D0%B5%D1%81%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%B8%D0%BC%D0%B8-%D1%88%D0%BB%D1%8E%D0%B7%D0%B0%D0%BC%D0%B8-%D0%BF%D0%BE-%D1%83%D0%BC%D0%BE%D0%BB%D1%87%D0%B0%D0%BD%D0%B8%D1%8E/</guid><description>Для обеспечения отказоустойчивости сетей применяется практика использования нескольких шлюзов по умолчанию. В таком случае при доступности одного из шлюзов, трафик будет идти через него (шлюзы не эквивалентны, постоянно активен только один). При отказе этого шлюза, трафик пойдет через второй шлюз. С соединениями по TCP проблем это не создаст. Единственное, TCP коннект должен будет пересоединиться по новому маршруту после завершения таймаута соединения. С трафиком же UDP могут возникнуть проблемы при переключении шлюза - телефония начнет заикаться, видео будет пропадать.</description><content>&lt;p>Для обеспечения отказоустойчивости сетей применяется практика использования нескольких шлюзов по умолчанию. В таком случае при доступности одного из шлюзов, трафик будет идти через него (шлюзы не эквивалентны, постоянно активен только один). При отказе этого шлюза, трафик пойдет через второй шлюз. С соединениями по TCP проблем это не создаст. Единственное, TCP коннект должен будет пересоединиться по новому маршруту после завершения таймаута соединения. С трафиком же UDP могут возникнуть проблемы при переключении шлюза - телефония начнет заикаться, видео будет пропадать. Но по прошествии какого-то времени проблема исчезнет. А как Windows определяет доступность шлюза? Об этом ниже.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Когда TCP-соединение маршрутизируется через основной шлюз, хост пытается отправить пакет к получателю столько раз, сколько указано в ключе реестра &lt;!-- raw HTML omitted -->TcpMaxDataRetransmissions, &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->деленное пополам. И если ответ от получателя за это количество попыток ни разу не пришел, то алгоритм меняет &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Route Cache Entry (RCE)&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->(кэш маршрутов). Наше соединение (отправившее TcpMaxDataRetransmissions/2 пакетов и не получившее ни одного ответа) переключается на шлюз, указанный вторым в настройках адаптера. Когда 25% TCP-соединений переключатся на второй шлюз, он становится шлюзом по умолчанию. Новый шлюз по умолчанию будет использоваться до возникновения аналогичных проблем с ним, либо до перезагрузки системы.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Вольный перевод &lt;!-- raw HTML omitted -->KB&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->171564&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></content></item><item><title>Самый полный мануал по резервированию интернета на Mikrotik RouterOS</title><link>https://bubnovd.github.io/blogger/%D1%81%D0%B0%D0%BC%D1%8B%D0%B9-%D0%BF%D0%BE%D0%BB%D0%BD%D1%8B%D0%B9-%D0%BC%D0%B0%D0%BD%D1%83%D0%B0%D0%BB-%D0%BF%D0%BE-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8E-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82%D0%B0-%D0%BD%D0%B0-mikrotik-routeros/</link><pubDate>Thu, 05 Mar 2015 22:06:00 +0000</pubDate><guid>https://bubnovd.github.io/blogger/%D1%81%D0%B0%D0%BC%D1%8B%D0%B9-%D0%BF%D0%BE%D0%BB%D0%BD%D1%8B%D0%B9-%D0%BC%D0%B0%D0%BD%D1%83%D0%B0%D0%BB-%D0%BF%D0%BE-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8E-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82%D0%B0-%D0%BD%D0%B0-mikrotik-routeros/</guid><description>В сети много мануалов по фэйловеру на RouterOS и подобрать нужный под конкретные цели иногда проблематично. В ходе своих экспериментов я выяснил, что наиболее универсальным является этот способ. Но у меня возникло несколько вопросов, ответы на которые я пока не нашел./ip routeadd dst-address=Host1 gateway=GW1 scope=10add dst-address=Host2 gateway=GW2 scope=10/ip routeadd distance=1 gateway=Host1 routing-mark=ISP1 check-gateway=pingadd distance=2 gateway=Host2 routing-mark=ISP1 check-gateway=ping/ip routeadd distance=1 gateway=Host2 routing-mark=ISP2 check-gateway=pingadd distance=2 gateway=Host1 routing-mark=ISP2 check-gateway=pingЯ делаю немного по-другому: первые две строки точно такие же, а дальше:/ip routeadd distance=1 gateway=Host1 check-gateway=pingadd distance=2 gateway=Host2 check-gateway=ping/ip routeadd distance=1 gateway=GW1 routing-mark=ISP1add distance=1 gateway=GW2 routing-mark=ISP2В первом варианте мне непонятно зачем пускать трафик, маркированный ISP1 по второму каналу и аналогично с ISP2.</description><content>&lt;p>В сети много мануалов по фэйловеру на RouterOS и подобрать нужный под конкретные цели иногда проблематично. В ходе своих экспериментов я выяснил, что наиболее универсальным является &lt;!-- raw HTML omitted -->этот&lt;!-- raw HTML omitted --> способ. Но у меня возникло несколько вопросов, ответы на которые я пока не нашел.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/ip route&lt;!-- raw HTML omitted -->add dst-address=&lt;!-- raw HTML omitted -->Host1&lt;!-- raw HTML omitted --> gateway=GW1 scope=&lt;!-- raw HTML omitted -->10&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add dst-address=&lt;!-- raw HTML omitted -->Host2&lt;!-- raw HTML omitted --> gateway=GW2 scope=&lt;!-- raw HTML omitted -->10&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/ip route&lt;!-- raw HTML omitted -->add distance=1 gateway=&lt;!-- raw HTML omitted -->Host1&lt;!-- raw HTML omitted --> routing-mark=ISP1 check-gateway=ping&lt;!-- raw HTML omitted -->add distance=2 gateway=&lt;!-- raw HTML omitted -->Host2&lt;!-- raw HTML omitted --> routing-mark=ISP1 check-gateway=ping&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/ip route&lt;!-- raw HTML omitted -->add distance=1 gateway=&lt;!-- raw HTML omitted -->Host2&lt;!-- raw HTML omitted --> routing-mark=ISP2 check-gateway=ping&lt;!-- raw HTML omitted -->add distance=2 gateway=&lt;!-- raw HTML omitted -->Host1&lt;!-- raw HTML omitted --> routing-mark=ISP2 check-gateway=ping&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Я делаю немного по-другому: первые две строки точно такие же, а дальше:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/ip route&lt;!-- raw HTML omitted -->add distance=1 gateway=&lt;!-- raw HTML omitted -->Host1&lt;!-- raw HTML omitted --> check-gateway=ping&lt;!-- raw HTML omitted -->add distance=2 gateway=&lt;!-- raw HTML omitted -->Host2&lt;!-- raw HTML omitted --> check-gateway=ping&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/ip route&lt;!-- raw HTML omitted -->add distance=1 gateway=&lt;!-- raw HTML omitted -->GW1&lt;!-- raw HTML omitted --> routing-mark=ISP1&lt;!-- raw HTML omitted -->add distance=1 gateway=GW&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted --> routing-mark=ISP2&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->В первом варианте мне непонятно зачем пускать трафик, маркированный ISP1 по второму каналу и аналогично с ISP2. Чтобы не рвалась сессия? Она все равно рвется. В общем, я делаю по своему варианту.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Как оно работает?&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add dst-address=&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Host1&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> gateway=GW1 scope=&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->10&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->указываем, что трафик до Host1 будет ходить через провайдера ISP1. Аналогично со вторым.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add distance=1 gateway=Host1 check-gateway=ping&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->указывает шлюзом по умолчанию Host1. Тем самым создается рекурсивный маршрут через GW1. Проверяется доступность Host1 пингом. Если Host1 доступен, то шлюз - GW1, если не доступен, но доступен Host2, трафик идет через GW2.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Маркировка маршрутов необходима для того, чтобы трафик, пришедший в один из интерфейсов не улетел во второй, если метрика второго ниже. Маркировка создается в таблице Mangle фаервола:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add chain=prerouting &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->in-interface=ISP1-int &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->action=mark-connection new-connection-mark=ISP1 passthrough=yes &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add chain=prerouting connection-mark=ISP1 action=mark-routing new-routing-mark=ISP1&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add chain=output connection-mark=ISP1 action=mark-routing new-routing-mark=ISP1&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Так же по второму провайдеру.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Эта схема прекрасно работает при статическом IP. Но как быть с DHCP, PPP и т.д. А всё просто - в настройках DHCP/PPP-клиента отключаем Add Default Route. И добавляем необходимый маршрут руками. Единственная проблема - адрес шлюза может смениться. В таком случае необходимо применение скриптов. Я написал небольшой скрипт для работы с USB-модемом, который проверяет правильный ли шлюз указан в строке 8.8.4.4 gw GW2. PPP-интерфейс в моем случае называется modem.&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local testIP 8.8.4.4/32&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->:local modemGW [/ip address get [find interface=&amp;ldquo;modem&amp;rdquo;] network]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->if ($modemGW!=([/ip route get [find dst-address=$testIP] gateway])) do={&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->[/ip route set [find dst-address=$testIP] gateway $modemGW]}&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->В Scheduler добавляем расписание для этого скрипта, чтобы выполнялся раз в минуту. На основе моего скрипта можно создать свой для любого другого типа подключения.&lt;!-- raw HTML omitted -->Для нетерпеливых привожу полный список команд, необходимый для настройки модема в качестве резервного канала. Всё, что вам нужно - просто скопировать текст и вставить его в терминал. Основной придется отмаркировать и прописать в маршрутизации руками:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/ip firewall mangle&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add chain=input in-interface=modem action=mark-connection new-connection-mark=modem&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add chain=output connection-mark=modem action=mark-routing new-routing-mark=modem&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/ip route&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add dst-address=8.8.4.4/32 gateway=[/ip address get [find interface=&amp;ldquo;modem&amp;rdquo;] network] distance=1 scope=10&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add distance=2 gateway=8.8.4.4 scope=10 check-gateway=ping&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add dst-address=0.0.0.0/0 gateway=[/ip address get [find interface=&amp;ldquo;modem&amp;rdquo;] network] distance=1 scope=10 routing-mark=modem&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/interface ppp-client set modem dial-on-demand=no add-default-route=no&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/system script&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=modemGW source=&amp;quot;:local testIP 8.8.4.4/32\r\n:local modemGW [/ip address get [find interface=&amp;quot;modem&amp;quot;] network]\r\nif ($modemGW!=([/ip route get [find dst-address=$testIP] gateway])) do={\r\n[/ip route set [find dst-address=$testIP] gateway $modemGW]}&amp;quot;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/system scheduler&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=checkGW interval=00:01:00 on-event=modemGW&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Есть ещё один способ фэйловера. Делается он только с помощью скриптов. Полное его описание &lt;!-- raw HTML omitted -->здесь&lt;!-- raw HTML omitted -->. Ниже скрипт для его мгновенного создания:&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/system script&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=SetGlobalParameters source=&amp;quot;#Main interface name\r\n:global MainIf [/interface get [find comment~&amp;quot;MainINT&amp;quot;] name]\r\n#Reserve interface name\r\n:global RsrvIf [/interface get [find comment~&amp;quot;RsrvINT&amp;quot;] name]\r\n#Main interface ip address\r\n:global MainIfAddress &amp;quot;&amp;quot;\r\n#Reserve interface ip address\r\n:global RsrvIfAddress &amp;quot;&amp;quot;&amp;quot;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=DefineMainIfIp source=&amp;quot;:global MainIf\r\n:global MainIfAddress &amp;quot;&amp;quot;\r\n:set MainIfAddress [/ip address get [find interface=$MainIf] address]&amp;quot;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=DefineReservedIfIp source=&amp;quot;:global RsrvIf\r\n:global RsrvIfAddress &amp;quot;&amp;quot;\r\n:set RsrvIfAddress [/ip address get [find interface=$RsrvIf] address]&amp;quot;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=ConnectionCheck source=&amp;quot;:global MainIf\r\n:global RsrvIf\r\n:global MainIfAddress\r\n:global RsrvIfAddress\r\n\r\n:local PingCount 3\r\n\r\n#yandex DNS\r\n:local PingTarget1 77.88.8.8\r\n\r\n#OpenDNS\r\n:local PingTarget2 208.67.222.222\r\n\r\n#google dns\r\n:local PingTarget3 8.8.8.8\r\n\r\n#Check main internet connection\r\n\r\n:local MainIfInetOk false;\r\n\r\nif ($MainIfAddress=&amp;quot;&amp;quot;) do={delay 5}\r\n\r\nif ($MainIfAddress!=&amp;quot;&amp;quot;) do={\r\n\r\n:local PingResult1 [/ping $PingTarget1 count=$PingCount interface=$MainIf]\r\n:local PingResult2 [/ping $PingTarget2 count=$PingCount interface=$MainIf]\r\n:local PingResult3 [/ping $PingTarget3 count=$PingCount interface=$MainIf]\r\n:set MainIfInetOk (($PingResult1 + $PingResult2 + $PingResult3) &amp;gt;= (2 * $PingCount))\r\n}\r\n\r\n#Check reserved internet connection\r\n:local RsrvIfInetOk false;\r\n\r\nif ($RsrvIfAddress=&amp;quot;&amp;quot;) do={delay 5}\r\n\r\nif ($RsrvIfAddress!=&amp;quot;&amp;quot;) do={\r\n:local PingResult1 [/ping $PingTarget1 count=$PingCount interface=$RsrvIf]\r\n\r\n:local PingResult2 [/ping $PingTarget2 count=$PingCount interface=$RsrvIf]\r\n:local PingResult3 [/ping $PingTarget3 count=$PingCount interface=$RsrvIf]\r\n\r\n:set RsrvIfInetOk (($PingResult1 + $PingResult2 + $PingResult3) &amp;gt;=(2 * $PingCount))\r\n}\r\n\r\n:put &amp;quot;MainIfInetOk=$MainIfInetOk&amp;quot;\r\n:put &amp;quot;RsrvIfInetOk=$RsrvIfInetOk&amp;quot;\r\n\r\nif (!$MainIfInetOk) do={\r\n/log error &amp;quot;Main internet connection error&amp;quot;\r\n}\r\n\r\nif (!$RsrvIfInetOk) do={\r\n/log error &amp;quot;Reserve internet connection error&amp;quot;\r\n}\r\n\r\n:local MainGWDistance [/ip route get [find comment~&amp;quot;MainGW&amp;quot;] distance]\r\n:local RsrvGWDistance [/ip route get [find comment~&amp;quot;RsrvGW&amp;quot;] distance]\r\n:put &amp;quot;MainGWDistance=$MainGWDistance&amp;quot;\r\n:put &amp;quot;RsrvGWDistance=$RsrvGWDistance&amp;quot;\r\n\r\n#SetUp gateways\r\nif ($MainIfInetOk &amp;amp;&amp;amp; ($MainGWDistance &amp;gt;= $RsrvGWDistance)) do={\r\n/ip route set [find comment~&amp;quot;MainGW&amp;quot;] distance=1\r\n/ip route set [find comment~&amp;quot;RsrvGW&amp;quot;] distance=2\r\n/log info &amp;quot;Switch to main internet connection&amp;quot;\r\n}\r\n\r\nif (!$MainIfInetOk &amp;amp;&amp;amp; $RsrvIfInetOk &amp;amp;&amp;amp; ($MainGWDistance &amp;lt;= $RsrvGWDistance)) do={\r\n/ip route set [find comment~&amp;quot;MainGW&amp;quot;] distance=2\r\n/ip route set [find comment~&amp;quot;RsrvGW&amp;quot;] distance=1\r\n/log warning &amp;quot;Switch to reserve internet connection&amp;quot;\r\n}&amp;quot;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->run SetGlobalParameters&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/system scheduler&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=SetGlobalParameters start-time=startup on-event=SetGlobalParameters&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=DefineMainIfIp interval=00:00:27 on-event=DefineMainIfIp&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=DefineReservedIfIp interval=00:00:27 on-event=DefineReservedIfIp&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->add name=ConnectionCheck interval=00:01:00 on-event=ConnectionCheck&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></content></item><item><title>RouterOS failover links</title><link>https://bubnovd.github.io/blogger/routeros-failover-links/</link><pubDate>Wed, 04 Mar 2015 00:27:00 +0000</pubDate><guid>https://bubnovd.github.io/blogger/routeros-failover-links/</guid><description>Фэйловер разных типов подключенийAdvanced Routing Failover without Scripting2 dynamic ISPs enabling failoverFailover via Netwatch IIIMikrotik OS и автоматическое переключение на резервный канал</description><content>&lt;p>Фэйловер разных типов подключений&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Advanced Routing Failover without Scripting&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->2 dynamic ISPs enabling failover&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Failover via Netwatch III&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Mikrotik OS и автоматическое переключение на резервный канал&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></content></item></channel></rss>