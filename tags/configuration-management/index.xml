<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>configuration management on Админская фамилия</title><link>https://bubnovd.net/tags/configuration-management/</link><description>Recent content in configuration management on Админская фамилия</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Nov 2017 09:56:00 +0000</lastBuildDate><atom:link href="https://bubnovd.net/tags/configuration-management/index.xml" rel="self" type="application/rss+xml"/><item><title>Мikrotik RouterOS Configuration Management с помощью скриптов и какой-то там матери</title><link>https://bubnovd.net/blogger/mikrotik-routeros-configuration-management-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B2-%D0%B8-%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9-%D1%82%D0%BE-%D1%82%D0%B0%D0%BC-%D0%BC%D0%B0%D1%82%D0%B5%D1%80%D0%B8/</link><pubDate>Mon, 20 Nov 2017 09:56:00 +0000</pubDate><guid>https://bubnovd.net/blogger/mikrotik-routeros-configuration-management-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B2-%D0%B8-%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9-%D1%82%D0%BE-%D1%82%D0%B0%D0%BC-%D0%BC%D0%B0%D1%82%D0%B5%D1%80%D0%B8/</guid><description>Жизненный цикл сети часто переживает закономерный рост. В это время начинают появляться десятки и сотни устройств, конфигурация которых однотипна. Например, это могут быть маршрутизаторы в филиалах, которые имеют одинаковые настройки и отличаются только IP адресами, паролями на VPN и Wi-Fi. Внесение даже незначительных изменений на десяток устройств потребует значительного времени и концентрации.
Для управления сотнями и тысячами устройств весь цивилизованный мир уже давно использует специальные системы менеджмента конфигураций: Ansible, Chef, Puppet.</description><content>&lt;p>Жизненный цикл сети часто переживает закономерный рост. В это время начинают появляться десятки и сотни устройств, конфигурация которых однотипна. Например, это могут быть маршрутизаторы в филиалах, которые имеют одинаковые настройки и отличаются только IP адресами, паролями на VPN и Wi-Fi. Внесение даже незначительных изменений на десяток устройств потребует значительного времени и концентрации.&lt;/p>
&lt;p>Для управления сотнями и тысячами устройств весь цивилизованный мир уже давно использует специальные системы менеджмента конфигураций: &lt;a href="https://www.ansible.com/">Ansible&lt;/a>, &lt;a href="https://www.chef.io/chef/">Chef&lt;/a>, &lt;a href="https://puppet.com/">Puppet&lt;/a>. Каждая из них имеет свои плюсы и минусы.&lt;/p>
&lt;p>Но для десяти-двадцати устройств не каждый захочет выделять отдельный сервер с такой системой. Поэтому в ход идут скрипты, SSH, FTP и куча матов, когда всё это поделие роняет сразу все филиалы.&lt;/p>
&lt;p>Видео для привлечения внимания&lt;br>
Это визуализация запросов от роутеров к системе, о которой идет речь в этом посте.&lt;/p>
&lt;p>Я тоже накостылил подобную систему в соответствии со своими потребностями и расскажу о ней.&lt;/p>
&lt;p>Мои требования к системе централизованного управления:&lt;/p>
&lt;ul>
&lt;li>Надежность.  Система должна работать независимо от скорости соединения или после месячного оффлайна&lt;/li>
&lt;li>Приемлемая скорость актуализации конфигурации. Если девайс месяц не включался, то свежий конфиг он должен применить за обозримое время&lt;/li>
&lt;li>Низкая нагрузка на каналы связи и ресурсы сервера. Обновление конфигурации не должно положить интернет в ЦОДе и процессор машины&lt;/li>
&lt;li>Масштабируемость. Систему можно увеличить в 5-10 раз&lt;/li>
&lt;li>Разделение устройств по группам. Применение разных настроек к разным группам&lt;/li>
&lt;li>Обратная связь о применении конфигурации &lt;/li>
&lt;li>Постараться не использовать Flash память микротика по причине её износа&lt;/li>
&lt;/ul>
&lt;p>Из требований родились идеи к реализации:&lt;/p>
&lt;ul>
&lt;li>Чтобы обеспечить применение всех изменений, роутер должен сам обращаться за конфигурацией&lt;/li>
&lt;li>Актуализация обеспечивается за счет опроса сервера раз в час&lt;/li>
&lt;li>Чтобы не нагружать ресурсы и каналы, роутеры должны обращаться за обновлениями в разное время&lt;/li>
&lt;li>Для оповещений использовать Telegram&lt;/li>
&lt;li>Следование принципу &lt;a href="https://ru.wikipedia.org/wiki/KISS_(%D0%BF%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF)">KISS&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Для работы системы понадобится только web сервер. В моем случае apache. Как его &lt;a href="http://www.bubnovd.net/2011/03/debian.html">установить&lt;/a> и &lt;a href="http://www.bubnovd.net/2011/08/linux-server-2-iptables.html">настроить&lt;/a> я &lt;a href="http://www.bubnovd.net/2011/10/blog-post.html">рассказывать&lt;/a> не буду, к тому же необязательно это должен быть апач.&lt;/p>
&lt;p>Логика такая: на веб сервере лежат RouterOS скрипты, с определенным именованием. Имя скрипта указывает на его версию и группу устройств, для которой должна примениться конфигурация. Маршрутизаторы с периодичностью раз в час обращаются к серверу за новым конфигом. Если новый конфиг есть, то он скачивается на роутер и выполняется. Если конфига нет - ничего не скачивается, что позволяет не дергать лишний раз быстроубиваемую память.&lt;/p>
&lt;p>Чтобы начать применять подобную систему, надо привести конфиги всех роутеров к одному стандарту. К примеру, не так давно в RouterOS появилась новая фича: Interface List. Теперь можно одним правилом в фаерволе заменить несколько правил, если их надо применить к разным интерфейсам. Наш скрипт должен добавить в интерфейс-лист интерфейс, который &amp;ldquo;смотрит&amp;rdquo; к провайдеру. На одном роутере это может быть eth1, на другом PPPoE, на третьем - вообще wlan1.&lt;/p>
&lt;p>Как в таком случае поступить? Надо как-то выделить внешние интерфейсы. Например, добавить к ним комментарий &amp;ldquo;WAN&amp;rdquo;.&lt;br>
Также стОит привести к одному виду фаервол, Queues - вообще всё, что есть на роутерах. И создать отдельную учетную запись,  с правами которой будут выполняться скрипты. Как создать скрипт для быстрой настройки роутеров я расскажу в следующем посте.&lt;/p>
&lt;p>Принцип именования скриптов: A000, где А - группа устройств, а номер - версия скрипта.&lt;/p>
&lt;p>Каждому роутеру в планировщик добавляем такие строки:&lt;/p>
&lt;pre tabindex="0">&lt;code>/system scheduler
/tool fetch url=&amp;#34;http://rbconf.bubnovd.net/A001&amp;#34; user=mikrotik-ninja password=mikrotik-ninja.ru
/import A001
&lt;/code>&lt;/pre>&lt;p>Это задание скачивает с сервера скрипт и выполняет его. Для обеспечения хоть какой-то безопасности, доступ к серверу только по паролю, который указан в задании.&lt;/p>
&lt;p>Сами скрипты лежат на сервере и выглядят примерно так:&lt;/p>
&lt;pre tabindex="0">&lt;code>/log info message=&amp;#34;.....................Autoconfiguration started.....................&amp;#34;
#Версия внедряемой конфигурации
#Описание задачи, которую выполняет скрипт: Удаление пользователя
#Первая часть скрипта нужна для только для определения  версии конфига, который нужно применить следующим
:local ver
:set $ver A001
#Версия следующей конфигурации
:local verNext
#Версия предыдущей конфигурации
:local verPrev
:set $verNext (&amp;#34;A&amp;#34; . \[tostr (\[tonum \[pick $ver 1 4\]\] + 1)\])
:set $verPrev (&amp;#34;A&amp;#34; . \[tostr (\[tonum \[pick $ver 1 4\]\] - 1)\])
#Добавляем нули, если надо
        if (\[:len $verNext\] =2) do={
                :set $verNext (\[pick $verNext 0 1\] . &amp;#34;00&amp;#34; . \[pick $verNext (\[len $verNext\] -1) (\[len $verNext\])\])} else={
                if (\[:len $verNext\] =3) do={
                        :set $verNext (\[pick $verNext 0 1\] . &amp;#34;0&amp;#34; . \[pick $verNext (\[len $verNext\] -2) (\[len $verNext\])\])} else={}}
        if (\[:len $verPrev\] =2) do={
                :set $verPrev (\[pick $verPrev 0 1\] . &amp;#34;00&amp;#34; . \[pick $verPrev (\[len $verPrev\] -1) (\[len $verPrev\])\])} else={
                if (\[:len $verPrev\] =3) do={
                        :set $verPrev (\[pick $verPrev 0 1\] . &amp;#34;0&amp;#34; . \[pick $verPrev (\[len $verPrev\] -2) (\[len $verPrev\])\])} else={}}
\# Вторая часть скрипта - наша рабочая конфигурация
#####
#####Тут код конфигурации
#####
if (\[len \[/user find name=&amp;#34;prosvirnin&amp;#34;\]\]&amp;gt;0) do={/user remove \[find name=&amp;#34;prosvirnin&amp;#34;\]} else={/log info message=&amp;#34;User not exist&amp;#34;}
#####
#/log info message=&amp;#34;Creating script $ver&amp;#34;
#/system script add name=$ver source=&amp;#34;/log info message=done&amp;#34;
#/log info message=&amp;#34;Script $ver created. Starting&amp;#34;
#/system script run $ver
#/log info message=&amp;#34;Removing script $ver&amp;#34;
#/system script remove $ver
\##### Или в скрипте выше
\# Третья часть - настройка планировщика для следующего изменения, оповещение и чистка файлов
/system scheduler set autoconf on-event=&amp;#34;/tool fetch url=\\&amp;#34;http://rbconf.bubnovd.net/$verNext\\&amp;#34; user=mikrotik-ninja password=mikrotik-ninja.ru\\r\\n
/import $verNext&amp;#34;
/log info message=&amp;#34;...................Autoconfiguration complete...................&amp;#34;
/delay 3
#Удаляем остатки предыдущих скриптов, если не удалились
if (\[:len \[/file find name~&amp;#34;sendMessage&amp;#34;\]\] &amp;gt;0) do={/file remove \[/file find name~&amp;#34;sendMessage&amp;#34;\]} else={/log info message=&amp;#34;No item for delete&amp;#34;}
if (\[:len \[/file find name=&amp;#34;$verPrev&amp;#34;\]\] &amp;gt;0) do={/file remove \[/file find name=&amp;#34;$verPrev&amp;#34;\]} else={/log info message=&amp;#34;No item for delete&amp;#34;}
/delay 3
#Отправляем уведомление о выполнении
:local name \[/system identity get name\]
/tool fetch keep-result=no url=&amp;#34;https://api.telegram.org/bot-nomer-bota:tut-vasha-ssylka/sendMessage\\?chat\_id=-12345678&amp;amp;text=$ver is complete on $name&amp;#34;
/delay 3
if (\[:len \[/file find name~&amp;#34;sendMessage&amp;#34;\]\] &amp;gt;0) do={/file remove \[/file find name~&amp;#34;sendMessage&amp;#34;\]} else={/log info message=&amp;#34;No item for delete&amp;#34;}
/delay 3
/file remove $ver
&lt;/code>&lt;/pre>&lt;p>Сначала описывается версия конфига и каким будет следующая версия. Затем после комментария &amp;ldquo;#####Тут код конфигурации&amp;rdquo; перечисляются команды, которые должен выполнить роутер. Иногда роутер должен выполнить сложный скрипт. На этот случай есть закомментированный блок кода со скриптом. Сам сложный скрипт нужно описать в поле &lt;code>source=&amp;quot;tut\_sam\_script&amp;quot; &lt;/code>&lt;/p>
&lt;p>После выполнения команд меняется задание в планировщике - указываем следующую версию скрипта, который надо применить. С этого момента роутер будет пытаться скачать его с сервера. Дальше шлём уведомление и удаляем файлы, которые могли создастся в ходе выполнения задания. Как слать оповещения в Telegram описано на &lt;a href="https://1spla.ru/blog/telegram_bot_for_mikrotik">бескрайних&lt;/a> &lt;a href="https://habrahabr.ru/post/314108/">просторах&lt;/a> интернета и повторяться я не буду.&lt;/p>
&lt;p>Очень важно предусмотреть в скрипте всё возможное и невозможное и каждая команда должна начинаться с проверки &lt;code>if (...) do={&lt;/code> , а заканчиваться &lt;code>} else={/log info message=&amp;quot;User not exist&amp;quot;}&lt;/code> . У одного из моих роутеров был баг, из-за которого не отображался wireless интерфейс. И без проверки его существования, скрипт просто вываливался с ошибкой. А значит, не менялась запись в планировщике и следующий скрипт тоже не выполнялся.&lt;/p>
&lt;p>Перед применением конфигурации на всю сеть нужно проверить правильность написания скрипта - даже опытный скриптописатель может чего-то не учесть и хорошо, если это какая-то мелочь и она не положит всю сеть. Поэтому перед созданием нового файла конфигурации, я проверяю  команды на работающем в продакшене роутере. А затем использую отдельную группу из 20 разнотипных роутеров (в основном это разный тип подключения к сети, остальные настройки везде идентичны) для тестирования скрипта. Эти роутеры опрашивают сервер чаще, чем остальные и после применения настроек я какое-то время наблюдаю за их поведением, а затем распространяю нововведения на остальную сеть.&lt;/p>
&lt;p>Чего не хватает в моём подходе:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Безопасность&lt;/strong>. Хоть доступ на сервер со скриптами ограничен паролем, но этот пароль в открытом виде хранится на роутерах. Вся конфигурация передается по сети в открытом виде. У меня всё это летает внутри шифрованного VPN и я запрещаю вам использовать это на нешифрованных публичных каналах! Внутреннего нарушителя тоже никто не отменял и внутри VPN это не очень безопасно. Можно Нужно! использовать https вместо http.&lt;/li>
&lt;li>&lt;strong>Информативные оповещения&lt;/strong>. При возникновении ошибки, неплохо было бы сообщать о ней&lt;/li>
&lt;li>&lt;strong>Возможны только изменения&lt;/strong>. Хочется ещё и читать конфиги и выделять места, отличные от стандарта. Но это задача уже другого класса систем&lt;/li>
&lt;/ul>
&lt;p>Через полгода после внедрения этой системы, на &lt;a href="https://mum.mikrotik.com/2016/RU/agenda/EN">встрече пользователей Mikrotik&lt;/a> Михаил Москалев   рассказал об аналогичном подходе. Михаил продвинулся дальше и применил модульный подход к конфигурации. Его презентацию можно посмотреть по &lt;a href="https://mum.mikrotik.com//presentations/RU16/presentation_3759_1475646696.pdf">ссылке&lt;/a>.&lt;br>
Такой же подход использует система блокировки рекламы для Mikrotik &lt;a href="https://stopad.cgood.ru/">https://stopad.cgood.ru/&lt;/a> . &lt;br>
Постоянный докладчик нашей &lt;a href="https://sysadminka.org/">#Sysadminka&lt;/a> написал свою систему управления конфигурациями. Она доступна на &lt;a href="https://github.com/xoma9/ops-tool">github&lt;/a>. Посмотреть можно на &lt;a href="https://www.youtube.com/watch?v=ZOOsY4r6qks">YouTube&lt;/a>.&lt;/p>
&lt;p>В следующем посте я опишу ещё один свой скриптик с использованием Excel, который помогает младшим админам настраивать первичную конфигурацию роутеров без вникания в WinBox и настройки RouterOS.&lt;/p>
&lt;p>P.S.: Видео в посте создано с помощью &lt;a href="http://www.bubnovd.net/2017/06/grep.html">grep&lt;/a> и &lt;a href="http://logstalgia.io/">logstalgia&lt;/a>.&lt;/p></content></item></channel></rss>